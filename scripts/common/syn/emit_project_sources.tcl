# Copyright 2022 Intel Corporation
# SPDX-License-Identifier: MIT

##
## Invoke from quartus_sh -t.
#
## Emit all RTL sources in a Quartus project.
#
# Add tcl_lib subdirectory of this script to package search path
lappend auto_path [file join [pwd] [file dirname [info script]] "../syn" tcl_lib]
# OFS script for parsing command line options
package require options


#************************************************
# Description: Print the HELP info
#************************************************
proc PrintHelp {} {
   puts "This script emits all the RTL source files in a project."
   puts "Usage: emit_project_sources.tcl --project=<proj> --revision=<rev> --output=<fname> \[--exclude-synth-files=<bool>\]"
   puts ""
   puts "Supported options:"
   puts "    --project=<project>"
   puts "    --revision=<revision>"
   puts "    --output=<output file>"
   puts "    --exclude-synth-files=<bool>"
}


proc emitSources {} {
  set project $::options::optionMap(--project)
  set revision $::options::optionMap(--revision)
  set output_fname $::options::optionMap(--output)

  set no_synth false
  if [info exists ::options::optionMap(--exclude-synth-files)] {
    set no_synth $::options::optionMap(--exclude-synth-files)
  }

  project_open -revision $revision $project
  set ofile [open $output_fname w]

  puts $ofile "##"
  puts $ofile "## RTL sources from ${project} ${revision}"
  puts $ofile "##"
  puts $ofile "## Generated by OFS emit_project_sources.tcl"
  puts $ofile "##"

  puts $ofile ""
  foreach_in_collection id [get_all_assignments -type global -name SEARCH_PATH] {
    puts -nonewline $ofile "+incdir+"
    puts $ofile [get_assignment_info $id -value]
  }

  foreach glob_type {SYSTEMVERILOG_FILE VERILOG_FILE VHDL_FILE} {
    puts $ofile ""
    foreach_in_collection id [get_all_assignments -type global -name $glob_type] {
      set design_file [get_assignment_info $id -value]
      # Switch to skip including files with a synth directory in the path
      if { [ expr [string is true -strict $no_synth] ] &&
           [ lsearch -exact [file split [file dirname $design_file]] "synth" ] != -1 } {
        continue
      }
      puts $ofile $design_file
    }
  }

  close $ofile
  project_close
}


#************************************************
# Description: Entry point of TCL post processing
#************************************************
proc main {} {
  if { [::options::ParseCMDArguments {--project --revision --output} {--exclude-synth-files}] == -1 } {
    PrintHelp
    return -1
  }

  emitSources
}

main
