; Copyright 2021 Intel Corporation
; SPDX-License-Identifier: MIT

[addr_size]
space=11:0
physical_addr=0x80000


; ################################################################################
; ### Describe a 64 bit register named "afu_intf_dfh" that lies at address 0x0 ###
; ################################################################################
[afu_intf_dfh]
offset=0x000

; ################################################################################
; ### Describe a field within the 64 bit register that occupies bits 63:60     ###
; ### of the afu_intf_dfh register. It is followed by some attributes that     ###
; ### discribe the field.                                                      ###
; ################################################################################
[afu_intf_dfh.feature_type]
range=63:60
access=RO
reset_temp=COLD
reset_value=0x3
description_of_field="Feature Type = Private Feature"

[afu_intf_dfh.eol]
range=40
access=RO
reset_temp=COLD
reset_value=0x1
description_of_field="End of List"

[afu_intf_dfh.next_dfh_byte_offset]
range=39:16
access=RO
reset_temp=COLD
reset_value=0x0
description_of_field="Next DFH Byte offset"

[afu_intf_dfh.feature_rev]
range=15:12
access=RO
reset_temp=COLD
reset_value=0x2
description_of_field="feature revision"

[afu_intf_dfh.feature_id]
range=11:0
access=RO
reset_temp=COLD
reset_value=0x10
description_of_field="feature ID"



; #################################################################################
; ### Describe the next 64 bit register . Note the offsets do not need to be in ###
; ### order and offsets can be skipped. It is recommended at least that they    ###
; ### appear in order in this file for readability.                              ###
; #################################################################################
[afu_intf_scratchpad]
offset=0x008

[afu_intf_scratchpad.scratchpad]
range=63:0
access=RW
reset_temp=WARM      ; optional, warm is the default.
reset_value=0x0 ; optional, zero is the default.
description_of_field="64 bit Scratchpad register."

; #####################################################################
[afu_intf_error]
offset=0x010

[afu_intf_error.max_read_req_size_err]
range=12
access=RW1CS
reset_temp=COLD
reset_value=0x0
set_term_net_name=max_read_req_size
set_term_net_declare=PORT
description_of_field="AFU memory read request size exceeds max payload length limit."

[afu_intf_error.max_tag_err]
range=11
access=RW1CS
reset_temp=COLD
reset_value=0x0
set_term_net_name=max_tag
set_term_net_declare=PORT
description_of_field="AFU memory read request tag value exceeds the maximum supported tag count."

[afu_intf_error.unexp_mmio_rsp_err]
range=8
access=RW1CS
reset_temp=COLD
reset_value=0x0
set_term_net_name=unexp_mmio_rsp
set_term_net_declare=PORT
description_of_field="AFU is sending an MMIO read response with no matching MMIO read request."

[afu_intf_error.mmio_timeout_err]
range=7
access=RW1CS
reset_temp=COLD
reset_value=0x0
set_pulse_port_name=sw_cleared_mmio_timeout ; example of things you can do
set_term_net_name=mmio_timeout
set_term_net_declare=PORT
description_of_field="AFU is not responding to an MMIO read request within the pre-defined response timeout"

[afu_intf_error.mmio_data_payload_overrun_err]
range=4
access=RW1CS
reset_temp=COLD
reset_value=0x0
set_term_net_name=mmio_data_payload_overrun
set_term_net_declare=PORT
description_of_field="The number of data payload sent by AFU for a given MMIO response (cplD) is more than the data length specified in the response."

; ####################################################################
; ### An example of creating a register that will capture only the ###
; ### first error that occurred.                                   ###
; ####################################################################
[afu_intf_first_error]
offset=0x018

[afu_intf_first_error.max_read_req_size_ferr]
range=12
access=RW1CS
reset_temp=COLD
reset_value=0x0
set_term_net_name=max_read_req_size ; Note this is the same net as register 0x010 bit 12.
set_term_net_declare=NO
freeze_csr_net_name=freeze_first_err_regs ; never freeze the register if freeze_first_err_regs is high.
                                          ; There is some manual coading needed in the template for freeze_first_err_regs
description_of_field="AFU memory read request size exceeds max payload length limit."

[afu_intf_first_error.max_tag_ferr]
range=11
access=RW1CS
reset_temp=COLD
reset_value=0x0
set_term_net_name=max_tag
set_term_net_declare=NO
freeze_csr_net_name=freeze_first_err_regs
description_of_field="AFU memory read request tag value exceeds the maximum supported tag count."

[afu_intf_first_error.unexp_mmio_rsp_ferr]
range=8
access=RW1CS
reset_temp=COLD
reset_value=0x0
set_term_net_name=unexp_mmio_rsp
set_term_net_declare=NO
freeze_csr_net_name=freeze_first_err_regs
description_of_field="AFU is sending an MMIO read response with no matching MMIO read request."

[afu_intf_first_error.mmio_timeout_ferr]
range=7
access=RW1CS
reset_temp=COLD
reset_value=0x0
set_term_net_name=mmio_timeout
set_term_net_declare=NO
freeze_csr_net_name=freeze_first_err_regs
description_of_field="AFU is not responding to an MMIO read request within the pre-defined response timeout"

[afu_intf_first_error.mmio_data_payload_overrun_ferr]
range=4
access=RW1CS
reset_temp=COLD
reset_value=0x0
set_term_net_name=mmio_data_payload_overrun
set_term_net_declare=NO
freeze_csr_net_name=freeze_first_err_regs
description_of_field="The number of data payload sent by AFU for a given MMIO response (cplD) is more than the data length specified in the response."


[more_examples]
offset=0x678 ; note some offsets are skipped. they retuen zeros when read.

; Example of how to read some hardware state
[more_examples.the_hw_fsm]
range = 3:0
access=RO
load_data_net=arbitor_fsm
load_data_net_declare=PORT
description_of_field="Always shows the state of the arbitor_fsm."

; ##############################################################################
; ### Example of how to send a pulse out a port of the module when a cfg bit ###
; ### is written to a 1.                                                   ###
; ##############################################################################
[more_examples.send_cmd]
range = 32
access=RO ; Set to RO so we always just read back the default data (zero).
          ; Documentation will be RW in this special case
set_pulse_port_name=YES
pipeline_stages = 2
description_of_field="When this bit is written it sends a pulse to the <something> logic to perform the command on bits 39:36 of this register"

[more_examples.cmd] ; The command for logic to run when send_cmd is written to a 1
range = 39:36
access=RW
output_port_name=YES
pipeline_stages = 2
description_of_field="The command for logic to run when send_cmd is written to a 1"

; ##########################################################################
; ### Example of how to load a CFG register with a qualifier (load_term) ###
; ##########################################################################
[more_examples.last_command_seen]
range = 15:8
access=RO
load_term_net=cmd_valid
load_term_declare=PORT
load_data_net=some_streaming_bus
load_data_net_declare=PORT
description_of_field="reports the last command seen on the streaming bus."

[more_examples.last_command_seen2]
range = 63:56
access=RO
load_term_net=YES
load_term_declare=PORT
load_data_net=YES
load_data_net_declare=PORT
description_of_field="reports the last command seen on the streaming bus."

; ################################################################################
; ### Example of how to synchronize CFG register / signals(s) to another clock ###
; ################################################################################
[more_examples.sync_me]
range = 54:50
access=RW
output_port_name=YES
synchronize_to_clock = clk_150
pipeline_stages = 5

;example of using a term internal to this module
[more_examples.example_using_internal_module_signal_1]
range=17
access=RW1CS
reset_temp=COLD
reset_value=0x0
set_term_net_name=interlan_signal_to_set_bit_17
set_term_net_declare=LOGIC
freeze_csr_net_name=freeze_first_err_regs
description_of_field="example using local module signal"

[more_examples.example_using_internal_module_signal_1]
range = 22:19
access=RO
load_term_net=interl_load_term
load_term_declare=LOGIC
load_data_net=internal_data_bus
load_data_net_declare=LOGIC
description_of_field="reports the last command seen on the streaming bus."

[more_examples.load_hw_state_example]
range = 5
access=RO
load_term_net=TRUE
load_term_declare=PORT
load_data_net=some_other_hw_state
load_data_net_declare=PORT
description_of_field="reports the last command seen on the streaming bus."

;[afu_intf_dfh.next_dfh_byte_offset]
;range=39:16
;access=RO
;reset_temp=COLD
;reset_value=0x0
;description_of_field="Next DFH Byte offset"


;[fooie]
;offset=0x010

;[fooie.fooier_field]
;range=46
;access=RW
;access=RO
;reset_temp=COLD
;reset_value=0x0

[done] ; Must have this line

