	component avst_pipeline_st_pipeline_stage_0 is
		generic (
			SYMBOLS_PER_BEAT : integer := 64;
			BITS_PER_SYMBOL  : integer := 8;
			USE_PACKETS      : integer := 1;
			USE_EMPTY        : integer := 1;
			EMPTY_WIDTH      : integer := 6;
			CHANNEL_WIDTH    : integer := 0;
			PACKET_WIDTH     : integer := 2;
			ERROR_WIDTH      : integer := 1;
			PIPELINE_READY   : integer := 1;
			SYNC_RESET       : integer := 1
		);
		port (
			clk               : in  std_logic                      := 'X';             -- clk
			reset             : in  std_logic                      := 'X';             -- reset
			in_ready          : out std_logic;                                         -- ready
			in_valid          : in  std_logic                      := 'X';             -- valid
			in_startofpacket  : in  std_logic                      := 'X';             -- startofpacket
			in_endofpacket    : in  std_logic                      := 'X';             -- endofpacket
			in_empty          : in  std_logic_vector(5 downto 0)   := (others => 'X'); -- empty
			in_error          : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- error
			in_data           : in  std_logic_vector(511 downto 0) := (others => 'X'); -- data
			out_ready         : in  std_logic                      := 'X';             -- ready
			out_valid         : out std_logic;                                         -- valid
			out_startofpacket : out std_logic;                                         -- startofpacket
			out_endofpacket   : out std_logic;                                         -- endofpacket
			out_empty         : out std_logic_vector(5 downto 0);                      -- empty
			out_error         : out std_logic_vector(0 downto 0);                      -- error
			out_data          : out std_logic_vector(511 downto 0)                     -- data
		);
	end component avst_pipeline_st_pipeline_stage_0;

