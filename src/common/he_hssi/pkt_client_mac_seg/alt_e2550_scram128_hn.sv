// Copyright 2001-2023 Intel Corporation
// SPDX-License-Identifier: MIT



`timescale 1ps/1ps

// DESCRIPTION
// Ethernet style scrambler for 128 bit data.
// Generated by one of Gregg's toys.   Share And Enjoy.

module alt_e2550_scram128_hn #(
    parameter SIM_EMULATE = 1'b1
) (
    input clk,
    input din_valid,
    input [127:0] din,
    output [127:0] dout,
    output dout_valid
);

wire [127:0] dout_tem;
wire disable_signal = 1'b0;

reg din_valid_r1 = 1'b0;
always @(posedge clk) din_valid_r1 <= din_valid;

reg din_valid_r2 = 1'b0;
always @(posedge clk) din_valid_r2 <= din_valid_r1;

wire [57:0] scram_state;


//////////////////////////////////////////////////
//  dout[0] has 3 terms
//////////////////////////////////////////////////

wire din_terms_58 = {
    din[0]
};

wire din_x_58;
alt_e2550_xor1t1_hn c0 (
    .clk(clk),
    .din(din_terms_58),
    .dout(din_x_58)
);
//defparam c0 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_58 = {
    scram_state[0],
    scram_state[19]
};

wire dout_w_58;
alt_e2550_xor3t1_hn c1 (
    .clk(clk),
    .din({din_x_58,scram_terms_58}),
    .dout(dout_w_58)
);
//defparam c1 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[0] = dout_w_58;

//////////////////////////////////////////////////
//  dout[1] has 3 terms
//////////////////////////////////////////////////

wire din_terms_59 = {
    din[1]
};

wire din_x_59;
alt_e2550_xor1t1_hn c2 (
    .clk(clk),
    .din(din_terms_59),
    .dout(din_x_59)
);
//defparam c2 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_59 = {
    scram_state[1],
    scram_state[20]
};

wire dout_w_59;
alt_e2550_xor3t1_hn c3 (
    .clk(clk),
    .din({din_x_59,scram_terms_59}),
    .dout(dout_w_59)
);
//defparam c3 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[1] = dout_w_59;

//////////////////////////////////////////////////
//  dout[2] has 3 terms
//////////////////////////////////////////////////

wire din_terms_60 = {
    din[2]
};

wire din_x_60;
alt_e2550_xor1t1_hn c4 (
    .clk(clk),
    .din(din_terms_60),
    .dout(din_x_60)
);
//defparam c4 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_60 = {
    scram_state[2],
    scram_state[21]
};

wire dout_w_60;
alt_e2550_xor3t1_hn c5 (
    .clk(clk),
    .din({din_x_60,scram_terms_60}),
    .dout(dout_w_60)
);
//defparam c5 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[2] = dout_w_60;

//////////////////////////////////////////////////
//  dout[3] has 3 terms
//////////////////////////////////////////////////

wire din_terms_61 = {
    din[3]
};

wire din_x_61;
alt_e2550_xor1t1_hn c6 (
    .clk(clk),
    .din(din_terms_61),
    .dout(din_x_61)
);
//defparam c6 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_61 = {
    scram_state[3],
    scram_state[22]
};

wire dout_w_61;
alt_e2550_xor3t1_hn c7 (
    .clk(clk),
    .din({din_x_61,scram_terms_61}),
    .dout(dout_w_61)
);
//defparam c7 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[3] = dout_w_61;

//////////////////////////////////////////////////
//  dout[4] has 3 terms
//////////////////////////////////////////////////

wire din_terms_62 = {
    din[4]
};

wire din_x_62;
alt_e2550_xor1t1_hn c8 (
    .clk(clk),
    .din(din_terms_62),
    .dout(din_x_62)
);
//defparam c8 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_62 = {
    scram_state[4],
    scram_state[23]
};

wire dout_w_62;
alt_e2550_xor3t1_hn c9 (
    .clk(clk),
    .din({din_x_62,scram_terms_62}),
    .dout(dout_w_62)
);
//defparam c9 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[4] = dout_w_62;

//////////////////////////////////////////////////
//  dout[5] has 3 terms
//////////////////////////////////////////////////

wire din_terms_63 = {
    din[5]
};

wire din_x_63;
alt_e2550_xor1t1_hn c10 (
    .clk(clk),
    .din(din_terms_63),
    .dout(din_x_63)
);
//defparam c10 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_63 = {
    scram_state[5],
    scram_state[24]
};

wire dout_w_63;
alt_e2550_xor3t1_hn c11 (
    .clk(clk),
    .din({din_x_63,scram_terms_63}),
    .dout(dout_w_63)
);
//defparam c11 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[5] = dout_w_63;

//////////////////////////////////////////////////
//  dout[6] has 3 terms
//////////////////////////////////////////////////

wire din_terms_64 = {
    din[6]
};

wire din_x_64;
alt_e2550_xor1t1_hn c12 (
    .clk(clk),
    .din(din_terms_64),
    .dout(din_x_64)
);
//defparam c12 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_64 = {
    scram_state[6],
    scram_state[25]
};

wire dout_w_64;
alt_e2550_xor3t1_hn c13 (
    .clk(clk),
    .din({din_x_64,scram_terms_64}),
    .dout(dout_w_64)
);
//defparam c13 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[6] = dout_w_64;

//////////////////////////////////////////////////
//  dout[7] has 3 terms
//////////////////////////////////////////////////

wire din_terms_65 = {
    din[7]
};

wire din_x_65;
alt_e2550_xor1t1_hn c14 (
    .clk(clk),
    .din(din_terms_65),
    .dout(din_x_65)
);
//defparam c14 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_65 = {
    scram_state[7],
    scram_state[26]
};

wire dout_w_65;
alt_e2550_xor3t1_hn c15 (
    .clk(clk),
    .din({din_x_65,scram_terms_65}),
    .dout(dout_w_65)
);
//defparam c15 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[7] = dout_w_65;

//////////////////////////////////////////////////
//  dout[8] has 3 terms
//////////////////////////////////////////////////

wire din_terms_66 = {
    din[8]
};

wire din_x_66;
alt_e2550_xor1t1_hn c16 (
    .clk(clk),
    .din(din_terms_66),
    .dout(din_x_66)
);
//defparam c16 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_66 = {
    scram_state[8],
    scram_state[27]
};

wire dout_w_66;
alt_e2550_xor3t1_hn c17 (
    .clk(clk),
    .din({din_x_66,scram_terms_66}),
    .dout(dout_w_66)
);
//defparam c17 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[8] = dout_w_66;

//////////////////////////////////////////////////
//  dout[9] has 3 terms
//////////////////////////////////////////////////

wire din_terms_67 = {
    din[9]
};

wire din_x_67;
alt_e2550_xor1t1_hn c18 (
    .clk(clk),
    .din(din_terms_67),
    .dout(din_x_67)
);
//defparam c18 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_67 = {
    scram_state[9],
    scram_state[28]
};

wire dout_w_67;
alt_e2550_xor3t1_hn c19 (
    .clk(clk),
    .din({din_x_67,scram_terms_67}),
    .dout(dout_w_67)
);
//defparam c19 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[9] = dout_w_67;

//////////////////////////////////////////////////
//  dout[10] has 3 terms
//////////////////////////////////////////////////

wire din_terms_68 = {
    din[10]
};

wire din_x_68;
alt_e2550_xor1t1_hn c20 (
    .clk(clk),
    .din(din_terms_68),
    .dout(din_x_68)
);
//defparam c20 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_68 = {
    scram_state[10],
    scram_state[29]
};

wire dout_w_68;
alt_e2550_xor3t1_hn c21 (
    .clk(clk),
    .din({din_x_68,scram_terms_68}),
    .dout(dout_w_68)
);
//defparam c21 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[10] = dout_w_68;

//////////////////////////////////////////////////
//  dout[11] has 3 terms
//////////////////////////////////////////////////

wire din_terms_69 = {
    din[11]
};

wire din_x_69;
alt_e2550_xor1t1_hn c22 (
    .clk(clk),
    .din(din_terms_69),
    .dout(din_x_69)
);
//defparam c22 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_69 = {
    scram_state[11],
    scram_state[30]
};

wire dout_w_69;
alt_e2550_xor3t1_hn c23 (
    .clk(clk),
    .din({din_x_69,scram_terms_69}),
    .dout(dout_w_69)
);
//defparam c23 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[11] = dout_w_69;

//////////////////////////////////////////////////
//  dout[12] has 3 terms
//////////////////////////////////////////////////

wire din_terms_70 = {
    din[12]
};

wire din_x_70;
alt_e2550_xor1t1_hn c24 (
    .clk(clk),
    .din(din_terms_70),
    .dout(din_x_70)
);
//defparam c24 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_70 = {
    scram_state[12],
    scram_state[31]
};

wire dout_w_70;
alt_e2550_xor3t1_hn c25 (
    .clk(clk),
    .din({din_x_70,scram_terms_70}),
    .dout(dout_w_70)
);
//defparam c25 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[12] = dout_w_70;

//////////////////////////////////////////////////
//  dout[13] has 3 terms
//////////////////////////////////////////////////

wire din_terms_71 = {
    din[13]
};

wire din_x_71;
alt_e2550_xor1t1_hn c26 (
    .clk(clk),
    .din(din_terms_71),
    .dout(din_x_71)
);
//defparam c26 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_71 = {
    scram_state[13],
    scram_state[32]
};

wire dout_w_71;
alt_e2550_xor3t1_hn c27 (
    .clk(clk),
    .din({din_x_71,scram_terms_71}),
    .dout(dout_w_71)
);
//defparam c27 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[13] = dout_w_71;

//////////////////////////////////////////////////
//  dout[14] has 3 terms
//////////////////////////////////////////////////

wire din_terms_72 = {
    din[14]
};

wire din_x_72;
alt_e2550_xor1t1_hn c28 (
    .clk(clk),
    .din(din_terms_72),
    .dout(din_x_72)
);
//defparam c28 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_72 = {
    scram_state[14],
    scram_state[33]
};

wire dout_w_72;
alt_e2550_xor3t1_hn c29 (
    .clk(clk),
    .din({din_x_72,scram_terms_72}),
    .dout(dout_w_72)
);
//defparam c29 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[14] = dout_w_72;

//////////////////////////////////////////////////
//  dout[15] has 3 terms
//////////////////////////////////////////////////

wire din_terms_73 = {
    din[15]
};

wire din_x_73;
alt_e2550_xor1t1_hn c30 (
    .clk(clk),
    .din(din_terms_73),
    .dout(din_x_73)
);
//defparam c30 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_73 = {
    scram_state[15],
    scram_state[34]
};

wire dout_w_73;
alt_e2550_xor3t1_hn c31 (
    .clk(clk),
    .din({din_x_73,scram_terms_73}),
    .dout(dout_w_73)
);
//defparam c31 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[15] = dout_w_73;

//////////////////////////////////////////////////
//  dout[16] has 3 terms
//////////////////////////////////////////////////

wire din_terms_74 = {
    din[16]
};

wire din_x_74;
alt_e2550_xor1t1_hn c32 (
    .clk(clk),
    .din(din_terms_74),
    .dout(din_x_74)
);
//defparam c32 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_74 = {
    scram_state[16],
    scram_state[35]
};

wire dout_w_74;
alt_e2550_xor3t1_hn c33 (
    .clk(clk),
    .din({din_x_74,scram_terms_74}),
    .dout(dout_w_74)
);
//defparam c33 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[16] = dout_w_74;

//////////////////////////////////////////////////
//  dout[17] has 3 terms
//////////////////////////////////////////////////

wire din_terms_75 = {
    din[17]
};

wire din_x_75;
alt_e2550_xor1t1_hn c34 (
    .clk(clk),
    .din(din_terms_75),
    .dout(din_x_75)
);
//defparam c34 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_75 = {
    scram_state[17],
    scram_state[36]
};

wire dout_w_75;
alt_e2550_xor3t1_hn c35 (
    .clk(clk),
    .din({din_x_75,scram_terms_75}),
    .dout(dout_w_75)
);
//defparam c35 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[17] = dout_w_75;

//////////////////////////////////////////////////
//  dout[18] has 3 terms
//////////////////////////////////////////////////

wire din_terms_76 = {
    din[18]
};

wire din_x_76;
alt_e2550_xor1t1_hn c36 (
    .clk(clk),
    .din(din_terms_76),
    .dout(din_x_76)
);
//defparam c36 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_76 = {
    scram_state[18],
    scram_state[37]
};

wire dout_w_76;
alt_e2550_xor3t1_hn c37 (
    .clk(clk),
    .din({din_x_76,scram_terms_76}),
    .dout(dout_w_76)
);
//defparam c37 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[18] = dout_w_76;

//////////////////////////////////////////////////
//  dout[19] has 3 terms
//////////////////////////////////////////////////

wire din_terms_77 = {
    din[19]
};

wire din_x_77;
alt_e2550_xor1t1_hn c38 (
    .clk(clk),
    .din(din_terms_77),
    .dout(din_x_77)
);
//defparam c38 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_77 = {
    scram_state[19],
    scram_state[38]
};

wire dout_w_77;
alt_e2550_xor3t1_hn c39 (
    .clk(clk),
    .din({din_x_77,scram_terms_77}),
    .dout(dout_w_77)
);
//defparam c39 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[19] = dout_w_77;

//////////////////////////////////////////////////
//  dout[20] has 3 terms
//////////////////////////////////////////////////

wire din_terms_78 = {
    din[20]
};

wire din_x_78;
alt_e2550_xor1t1_hn c40 (
    .clk(clk),
    .din(din_terms_78),
    .dout(din_x_78)
);
//defparam c40 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_78 = {
    scram_state[20],
    scram_state[39]
};

wire dout_w_78;
alt_e2550_xor3t1_hn c41 (
    .clk(clk),
    .din({din_x_78,scram_terms_78}),
    .dout(dout_w_78)
);
//defparam c41 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[20] = dout_w_78;

//////////////////////////////////////////////////
//  dout[21] has 3 terms
//////////////////////////////////////////////////

wire din_terms_79 = {
    din[21]
};

wire din_x_79;
alt_e2550_xor1t1_hn c42 (
    .clk(clk),
    .din(din_terms_79),
    .dout(din_x_79)
);
//defparam c42 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_79 = {
    scram_state[21],
    scram_state[40]
};

wire dout_w_79;
alt_e2550_xor3t1_hn c43 (
    .clk(clk),
    .din({din_x_79,scram_terms_79}),
    .dout(dout_w_79)
);
//defparam c43 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[21] = dout_w_79;

//////////////////////////////////////////////////
//  dout[22] has 3 terms
//////////////////////////////////////////////////

wire din_terms_80 = {
    din[22]
};

wire din_x_80;
alt_e2550_xor1t1_hn c44 (
    .clk(clk),
    .din(din_terms_80),
    .dout(din_x_80)
);
//defparam c44 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_80 = {
    scram_state[22],
    scram_state[41]
};

wire dout_w_80;
alt_e2550_xor3t1_hn c45 (
    .clk(clk),
    .din({din_x_80,scram_terms_80}),
    .dout(dout_w_80)
);
//defparam c45 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[22] = dout_w_80;

//////////////////////////////////////////////////
//  dout[23] has 3 terms
//////////////////////////////////////////////////

wire din_terms_81 = {
    din[23]
};

wire din_x_81;
alt_e2550_xor1t1_hn c46 (
    .clk(clk),
    .din(din_terms_81),
    .dout(din_x_81)
);
//defparam c46 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_81 = {
    scram_state[23],
    scram_state[42]
};

wire dout_w_81;
alt_e2550_xor3t1_hn c47 (
    .clk(clk),
    .din({din_x_81,scram_terms_81}),
    .dout(dout_w_81)
);
//defparam c47 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[23] = dout_w_81;

//////////////////////////////////////////////////
//  dout[24] has 3 terms
//////////////////////////////////////////////////

wire din_terms_82 = {
    din[24]
};

wire din_x_82;
alt_e2550_xor1t1_hn c48 (
    .clk(clk),
    .din(din_terms_82),
    .dout(din_x_82)
);
//defparam c48 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_82 = {
    scram_state[24],
    scram_state[43]
};

wire dout_w_82;
alt_e2550_xor3t1_hn c49 (
    .clk(clk),
    .din({din_x_82,scram_terms_82}),
    .dout(dout_w_82)
);
//defparam c49 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[24] = dout_w_82;

//////////////////////////////////////////////////
//  dout[25] has 3 terms
//////////////////////////////////////////////////

wire din_terms_83 = {
    din[25]
};

wire din_x_83;
alt_e2550_xor1t1_hn c50 (
    .clk(clk),
    .din(din_terms_83),
    .dout(din_x_83)
);
//defparam c50 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_83 = {
    scram_state[25],
    scram_state[44]
};

wire dout_w_83;
alt_e2550_xor3t1_hn c51 (
    .clk(clk),
    .din({din_x_83,scram_terms_83}),
    .dout(dout_w_83)
);
//defparam c51 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[25] = dout_w_83;

//////////////////////////////////////////////////
//  dout[26] has 3 terms
//////////////////////////////////////////////////

wire din_terms_84 = {
    din[26]
};

wire din_x_84;
alt_e2550_xor1t1_hn c52 (
    .clk(clk),
    .din(din_terms_84),
    .dout(din_x_84)
);
//defparam c52 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_84 = {
    scram_state[26],
    scram_state[45]
};

wire dout_w_84;
alt_e2550_xor3t1_hn c53 (
    .clk(clk),
    .din({din_x_84,scram_terms_84}),
    .dout(dout_w_84)
);
//defparam c53 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[26] = dout_w_84;

//////////////////////////////////////////////////
//  dout[27] has 3 terms
//////////////////////////////////////////////////

wire din_terms_85 = {
    din[27]
};

wire din_x_85;
alt_e2550_xor1t1_hn c54 (
    .clk(clk),
    .din(din_terms_85),
    .dout(din_x_85)
);
//defparam c54 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_85 = {
    scram_state[27],
    scram_state[46]
};

wire dout_w_85;
alt_e2550_xor3t1_hn c55 (
    .clk(clk),
    .din({din_x_85,scram_terms_85}),
    .dout(dout_w_85)
);
//defparam c55 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[27] = dout_w_85;

//////////////////////////////////////////////////
//  dout[28] has 3 terms
//////////////////////////////////////////////////

wire din_terms_86 = {
    din[28]
};

wire din_x_86;
alt_e2550_xor1t1_hn c56 (
    .clk(clk),
    .din(din_terms_86),
    .dout(din_x_86)
);
//defparam c56 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_86 = {
    scram_state[28],
    scram_state[47]
};

wire dout_w_86;
alt_e2550_xor3t1_hn c57 (
    .clk(clk),
    .din({din_x_86,scram_terms_86}),
    .dout(dout_w_86)
);
//defparam c57 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[28] = dout_w_86;

//////////////////////////////////////////////////
//  dout[29] has 3 terms
//////////////////////////////////////////////////

wire din_terms_87 = {
    din[29]
};

wire din_x_87;
alt_e2550_xor1t1_hn c58 (
    .clk(clk),
    .din(din_terms_87),
    .dout(din_x_87)
);
//defparam c58 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_87 = {
    scram_state[29],
    scram_state[48]
};

wire dout_w_87;
alt_e2550_xor3t1_hn c59 (
    .clk(clk),
    .din({din_x_87,scram_terms_87}),
    .dout(dout_w_87)
);
//defparam c59 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[29] = dout_w_87;

//////////////////////////////////////////////////
//  dout[30] has 3 terms
//////////////////////////////////////////////////

wire din_terms_88 = {
    din[30]
};

wire din_x_88;
alt_e2550_xor1t1_hn c60 (
    .clk(clk),
    .din(din_terms_88),
    .dout(din_x_88)
);
//defparam c60 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_88 = {
    scram_state[30],
    scram_state[49]
};

wire dout_w_88;
alt_e2550_xor3t1_hn c61 (
    .clk(clk),
    .din({din_x_88,scram_terms_88}),
    .dout(dout_w_88)
);
//defparam c61 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[30] = dout_w_88;

//////////////////////////////////////////////////
//  dout[31] has 3 terms
//////////////////////////////////////////////////

wire din_terms_89 = {
    din[31]
};

wire din_x_89;
alt_e2550_xor1t1_hn c62 (
    .clk(clk),
    .din(din_terms_89),
    .dout(din_x_89)
);
//defparam c62 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_89 = {
    scram_state[31],
    scram_state[50]
};

wire dout_w_89;
alt_e2550_xor3t1_hn c63 (
    .clk(clk),
    .din({din_x_89,scram_terms_89}),
    .dout(dout_w_89)
);
//defparam c63 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[31] = dout_w_89;

//////////////////////////////////////////////////
//  dout[32] has 3 terms
//////////////////////////////////////////////////

wire din_terms_90 = {
    din[32]
};

wire din_x_90;
alt_e2550_xor1t1_hn c64 (
    .clk(clk),
    .din(din_terms_90),
    .dout(din_x_90)
);
//defparam c64 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_90 = {
    scram_state[32],
    scram_state[51]
};

wire dout_w_90;
alt_e2550_xor3t1_hn c65 (
    .clk(clk),
    .din({din_x_90,scram_terms_90}),
    .dout(dout_w_90)
);
//defparam c65 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[32] = dout_w_90;

//////////////////////////////////////////////////
//  dout[33] has 3 terms
//////////////////////////////////////////////////

wire din_terms_91 = {
    din[33]
};

wire din_x_91;
alt_e2550_xor1t1_hn c66 (
    .clk(clk),
    .din(din_terms_91),
    .dout(din_x_91)
);
//defparam c66 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_91 = {
    scram_state[33],
    scram_state[52]
};

wire dout_w_91;
alt_e2550_xor3t1_hn c67 (
    .clk(clk),
    .din({din_x_91,scram_terms_91}),
    .dout(dout_w_91)
);
//defparam c67 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[33] = dout_w_91;

//////////////////////////////////////////////////
//  dout[34] has 3 terms
//////////////////////////////////////////////////

wire din_terms_92 = {
    din[34]
};

wire din_x_92;
alt_e2550_xor1t1_hn c68 (
    .clk(clk),
    .din(din_terms_92),
    .dout(din_x_92)
);
//defparam c68 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_92 = {
    scram_state[34],
    scram_state[53]
};

wire dout_w_92;
alt_e2550_xor3t1_hn c69 (
    .clk(clk),
    .din({din_x_92,scram_terms_92}),
    .dout(dout_w_92)
);
//defparam c69 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[34] = dout_w_92;

//////////////////////////////////////////////////
//  dout[35] has 3 terms
//////////////////////////////////////////////////

wire din_terms_93 = {
    din[35]
};

wire din_x_93;
alt_e2550_xor1t1_hn c70 (
    .clk(clk),
    .din(din_terms_93),
    .dout(din_x_93)
);
//defparam c70 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_93 = {
    scram_state[35],
    scram_state[54]
};

wire dout_w_93;
alt_e2550_xor3t1_hn c71 (
    .clk(clk),
    .din({din_x_93,scram_terms_93}),
    .dout(dout_w_93)
);
//defparam c71 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[35] = dout_w_93;

//////////////////////////////////////////////////
//  dout[36] has 3 terms
//////////////////////////////////////////////////

wire din_terms_94 = {
    din[36]
};

wire din_x_94;
alt_e2550_xor1t1_hn c72 (
    .clk(clk),
    .din(din_terms_94),
    .dout(din_x_94)
);
//defparam c72 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_94 = {
    scram_state[36],
    scram_state[55]
};

wire dout_w_94;
alt_e2550_xor3t1_hn c73 (
    .clk(clk),
    .din({din_x_94,scram_terms_94}),
    .dout(dout_w_94)
);
//defparam c73 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[36] = dout_w_94;

//////////////////////////////////////////////////
//  dout[37] has 3 terms
//////////////////////////////////////////////////

wire din_terms_95 = {
    din[37]
};

wire din_x_95;
alt_e2550_xor1t1_hn c74 (
    .clk(clk),
    .din(din_terms_95),
    .dout(din_x_95)
);
//defparam c74 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_95 = {
    scram_state[37],
    scram_state[56]
};

wire dout_w_95;
alt_e2550_xor3t1_hn c75 (
    .clk(clk),
    .din({din_x_95,scram_terms_95}),
    .dout(dout_w_95)
);
//defparam c75 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[37] = dout_w_95;

//////////////////////////////////////////////////
//  dout[38] has 3 terms
//////////////////////////////////////////////////

wire din_terms_96 = {
    din[38]
};

wire din_x_96;
alt_e2550_xor1t1_hn c76 (
    .clk(clk),
    .din(din_terms_96),
    .dout(din_x_96)
);
//defparam c76 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_96 = {
    scram_state[38],
    scram_state[57]
};

wire dout_w_96;
alt_e2550_xor3t1_hn c77 (
    .clk(clk),
    .din({din_x_96,scram_terms_96}),
    .dout(dout_w_96)
);
//defparam c77 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[38] = dout_w_96;

//////////////////////////////////////////////////
//  dout[39] has 5 terms
//////////////////////////////////////////////////

wire [1:0] din_terms_97 = {
    din[39],
    din[0]
};

wire din_x_97;
alt_e2550_xor2t1_hn c78 (
    .clk(clk),
    .din(din_terms_97),
    .dout(din_x_97)
);
//defparam c78 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_97 = {
    scram_state[39],
    scram_state[0],
    scram_state[19]
};

wire dout_w_97;
alt_e2550_xor4t1_hn c79 (
    .clk(clk),
    .din({din_x_97,scram_terms_97}),
    .dout(dout_w_97)
);
//defparam c79 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[39] = dout_w_97;

//////////////////////////////////////////////////
//  dout[40] has 5 terms
//////////////////////////////////////////////////

wire [1:0] din_terms_98 = {
    din[40],
    din[1]
};

wire din_x_98;
alt_e2550_xor2t1_hn c80 (
    .clk(clk),
    .din(din_terms_98),
    .dout(din_x_98)
);
//defparam c80 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_98 = {
    scram_state[40],
    scram_state[1],
    scram_state[20]
};

wire dout_w_98;
alt_e2550_xor4t1_hn c81 (
    .clk(clk),
    .din({din_x_98,scram_terms_98}),
    .dout(dout_w_98)
);
//defparam c81 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[40] = dout_w_98;

//////////////////////////////////////////////////
//  dout[41] has 5 terms
//////////////////////////////////////////////////

wire [1:0] din_terms_99 = {
    din[41],
    din[2]
};

wire din_x_99;
alt_e2550_xor2t1_hn c82 (
    .clk(clk),
    .din(din_terms_99),
    .dout(din_x_99)
);
//defparam c82 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_99 = {
    scram_state[41],
    scram_state[2],
    scram_state[21]
};

wire dout_w_99;
alt_e2550_xor4t1_hn c83 (
    .clk(clk),
    .din({din_x_99,scram_terms_99}),
    .dout(dout_w_99)
);
//defparam c83 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[41] = dout_w_99;

//////////////////////////////////////////////////
//  dout[42] has 5 terms
//////////////////////////////////////////////////

wire [1:0] din_terms_100 = {
    din[42],
    din[3]
};

wire din_x_100;
alt_e2550_xor2t1_hn c84 (
    .clk(clk),
    .din(din_terms_100),
    .dout(din_x_100)
);
//defparam c84 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_100 = {
    scram_state[42],
    scram_state[3],
    scram_state[22]
};

wire dout_w_100;
alt_e2550_xor4t1_hn c85 (
    .clk(clk),
    .din({din_x_100,scram_terms_100}),
    .dout(dout_w_100)
);
//defparam c85 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[42] = dout_w_100;

//////////////////////////////////////////////////
//  dout[43] has 5 terms
//////////////////////////////////////////////////

wire [1:0] din_terms_101 = {
    din[43],
    din[4]
};

wire din_x_101;
alt_e2550_xor2t1_hn c86 (
    .clk(clk),
    .din(din_terms_101),
    .dout(din_x_101)
);
//defparam c86 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_101 = {
    scram_state[43],
    scram_state[4],
    scram_state[23]
};

wire dout_w_101;
alt_e2550_xor4t1_hn c87 (
    .clk(clk),
    .din({din_x_101,scram_terms_101}),
    .dout(dout_w_101)
);
//defparam c87 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[43] = dout_w_101;

//////////////////////////////////////////////////
//  dout[44] has 5 terms
//////////////////////////////////////////////////

wire [1:0] din_terms_102 = {
    din[44],
    din[5]
};

wire din_x_102;
alt_e2550_xor2t1_hn c88 (
    .clk(clk),
    .din(din_terms_102),
    .dout(din_x_102)
);
//defparam c88 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_102 = {
    scram_state[44],
    scram_state[5],
    scram_state[24]
};

wire dout_w_102;
alt_e2550_xor4t1_hn c89 (
    .clk(clk),
    .din({din_x_102,scram_terms_102}),
    .dout(dout_w_102)
);
//defparam c89 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[44] = dout_w_102;

//////////////////////////////////////////////////
//  dout[45] has 5 terms
//////////////////////////////////////////////////

wire [1:0] din_terms_103 = {
    din[45],
    din[6]
};

wire din_x_103;
alt_e2550_xor2t1_hn c90 (
    .clk(clk),
    .din(din_terms_103),
    .dout(din_x_103)
);
//defparam c90 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_103 = {
    scram_state[45],
    scram_state[6],
    scram_state[25]
};

wire dout_w_103;
alt_e2550_xor4t1_hn c91 (
    .clk(clk),
    .din({din_x_103,scram_terms_103}),
    .dout(dout_w_103)
);
//defparam c91 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[45] = dout_w_103;

//////////////////////////////////////////////////
//  dout[46] has 5 terms
//////////////////////////////////////////////////

wire [1:0] din_terms_104 = {
    din[46],
    din[7]
};

wire din_x_104;
alt_e2550_xor2t1_hn c92 (
    .clk(clk),
    .din(din_terms_104),
    .dout(din_x_104)
);
//defparam c92 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_104 = {
    scram_state[46],
    scram_state[7],
    scram_state[26]
};

wire dout_w_104;
alt_e2550_xor4t1_hn c93 (
    .clk(clk),
    .din({din_x_104,scram_terms_104}),
    .dout(dout_w_104)
);
//defparam c93 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[46] = dout_w_104;

//////////////////////////////////////////////////
//  dout[47] has 5 terms
//////////////////////////////////////////////////

wire [1:0] din_terms_105 = {
    din[47],
    din[8]
};

wire din_x_105;
alt_e2550_xor2t1_hn c94 (
    .clk(clk),
    .din(din_terms_105),
    .dout(din_x_105)
);
//defparam c94 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_105 = {
    scram_state[47],
    scram_state[8],
    scram_state[27]
};

wire dout_w_105;
alt_e2550_xor4t1_hn c95 (
    .clk(clk),
    .din({din_x_105,scram_terms_105}),
    .dout(dout_w_105)
);
//defparam c95 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[47] = dout_w_105;

//////////////////////////////////////////////////
//  dout[48] has 5 terms
//////////////////////////////////////////////////

wire [1:0] din_terms_106 = {
    din[48],
    din[9]
};

wire din_x_106;
alt_e2550_xor2t1_hn c96 (
    .clk(clk),
    .din(din_terms_106),
    .dout(din_x_106)
);
//defparam c96 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_106 = {
    scram_state[48],
    scram_state[9],
    scram_state[28]
};

wire dout_w_106;
alt_e2550_xor4t1_hn c97 (
    .clk(clk),
    .din({din_x_106,scram_terms_106}),
    .dout(dout_w_106)
);
//defparam c97 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[48] = dout_w_106;

//////////////////////////////////////////////////
//  dout[49] has 5 terms
//////////////////////////////////////////////////

wire [1:0] din_terms_107 = {
    din[49],
    din[10]
};

wire din_x_107;
alt_e2550_xor2t1_hn c98 (
    .clk(clk),
    .din(din_terms_107),
    .dout(din_x_107)
);
//defparam c98 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_107 = {
    scram_state[49],
    scram_state[10],
    scram_state[29]
};

wire dout_w_107;
alt_e2550_xor4t1_hn c99 (
    .clk(clk),
    .din({din_x_107,scram_terms_107}),
    .dout(dout_w_107)
);
//defparam c99 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[49] = dout_w_107;

//////////////////////////////////////////////////
//  dout[50] has 5 terms
//////////////////////////////////////////////////

wire [1:0] din_terms_108 = {
    din[50],
    din[11]
};

wire din_x_108;
alt_e2550_xor2t1_hn c100 (
    .clk(clk),
    .din(din_terms_108),
    .dout(din_x_108)
);
//defparam c100 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_108 = {
    scram_state[50],
    scram_state[11],
    scram_state[30]
};

wire dout_w_108;
alt_e2550_xor4t1_hn c101 (
    .clk(clk),
    .din({din_x_108,scram_terms_108}),
    .dout(dout_w_108)
);
//defparam c101 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[50] = dout_w_108;

//////////////////////////////////////////////////
//  dout[51] has 5 terms
//////////////////////////////////////////////////

wire [1:0] din_terms_109 = {
    din[51],
    din[12]
};

wire din_x_109;
alt_e2550_xor2t1_hn c102 (
    .clk(clk),
    .din(din_terms_109),
    .dout(din_x_109)
);
//defparam c102 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_109 = {
    scram_state[51],
    scram_state[12],
    scram_state[31]
};

wire dout_w_109;
alt_e2550_xor4t1_hn c103 (
    .clk(clk),
    .din({din_x_109,scram_terms_109}),
    .dout(dout_w_109)
);
//defparam c103 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[51] = dout_w_109;

//////////////////////////////////////////////////
//  dout[52] has 5 terms
//////////////////////////////////////////////////

wire [1:0] din_terms_110 = {
    din[52],
    din[13]
};

wire din_x_110;
alt_e2550_xor2t1_hn c104 (
    .clk(clk),
    .din(din_terms_110),
    .dout(din_x_110)
);
//defparam c104 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_110 = {
    scram_state[52],
    scram_state[13],
    scram_state[32]
};

wire dout_w_110;
alt_e2550_xor4t1_hn c105 (
    .clk(clk),
    .din({din_x_110,scram_terms_110}),
    .dout(dout_w_110)
);
//defparam c105 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[52] = dout_w_110;

//////////////////////////////////////////////////
//  dout[53] has 5 terms
//////////////////////////////////////////////////

wire [1:0] din_terms_111 = {
    din[53],
    din[14]
};

wire din_x_111;
alt_e2550_xor2t1_hn c106 (
    .clk(clk),
    .din(din_terms_111),
    .dout(din_x_111)
);
//defparam c106 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_111 = {
    scram_state[53],
    scram_state[14],
    scram_state[33]
};

wire dout_w_111;
alt_e2550_xor4t1_hn c107 (
    .clk(clk),
    .din({din_x_111,scram_terms_111}),
    .dout(dout_w_111)
);
//defparam c107 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[53] = dout_w_111;

//////////////////////////////////////////////////
//  dout[54] has 5 terms
//////////////////////////////////////////////////

wire [1:0] din_terms_112 = {
    din[54],
    din[15]
};

wire din_x_112;
alt_e2550_xor2t1_hn c108 (
    .clk(clk),
    .din(din_terms_112),
    .dout(din_x_112)
);
//defparam c108 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_112 = {
    scram_state[54],
    scram_state[15],
    scram_state[34]
};

wire dout_w_112;
alt_e2550_xor4t1_hn c109 (
    .clk(clk),
    .din({din_x_112,scram_terms_112}),
    .dout(dout_w_112)
);
//defparam c109 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[54] = dout_w_112;

//////////////////////////////////////////////////
//  dout[55] has 5 terms
//////////////////////////////////////////////////

wire [1:0] din_terms_113 = {
    din[55],
    din[16]
};

wire din_x_113;
alt_e2550_xor2t1_hn c110 (
    .clk(clk),
    .din(din_terms_113),
    .dout(din_x_113)
);
//defparam c110 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_113 = {
    scram_state[55],
    scram_state[16],
    scram_state[35]
};

wire dout_w_113;
alt_e2550_xor4t1_hn c111 (
    .clk(clk),
    .din({din_x_113,scram_terms_113}),
    .dout(dout_w_113)
);
//defparam c111 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[55] = dout_w_113;

//////////////////////////////////////////////////
//  dout[56] has 5 terms
//////////////////////////////////////////////////

wire [1:0] din_terms_114 = {
    din[56],
    din[17]
};

wire din_x_114;
alt_e2550_xor2t1_hn c112 (
    .clk(clk),
    .din(din_terms_114),
    .dout(din_x_114)
);
//defparam c112 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_114 = {
    scram_state[56],
    scram_state[17],
    scram_state[36]
};

wire dout_w_114;
alt_e2550_xor4t1_hn c113 (
    .clk(clk),
    .din({din_x_114,scram_terms_114}),
    .dout(dout_w_114)
);
//defparam c113 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[56] = dout_w_114;

//////////////////////////////////////////////////
//  dout[57] has 5 terms
//////////////////////////////////////////////////

wire [1:0] din_terms_115 = {
    din[57],
    din[18]
};

wire din_x_115;
alt_e2550_xor2t1_hn c114 (
    .clk(clk),
    .din(din_terms_115),
    .dout(din_x_115)
);
//defparam c114 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_115 = {
    scram_state[57],
    scram_state[18],
    scram_state[37]
};

wire dout_w_115;
alt_e2550_xor4t1_hn c115 (
    .clk(clk),
    .din({din_x_115,scram_terms_115}),
    .dout(dout_w_115)
);
//defparam c115 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[57] = dout_w_115;

//////////////////////////////////////////////////
//  dout[58] has 5 terms
//////////////////////////////////////////////////

wire [2:0] din_terms_116 = {
    din[58],
    din[0],
    din[19]
};

wire din_x_116;
alt_e2550_xor3t1_hn c116 (
    .clk(clk),
    .din(din_terms_116),
    .dout(din_x_116)
);
//defparam c116 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_116 = {
    scram_state[0],
    scram_state[38]
};

wire dout_w_116;
alt_e2550_xor3t1_hn c117 (
    .clk(clk),
    .din({din_x_116,scram_terms_116}),
    .dout(dout_w_116)
);
//defparam c117 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[58] = dout_w_116;

//////////////////////////////////////////////////
//  dout[59] has 5 terms
//////////////////////////////////////////////////

wire [2:0] din_terms_117 = {
    din[59],
    din[1],
    din[20]
};

wire din_x_117;
alt_e2550_xor3t1_hn c118 (
    .clk(clk),
    .din(din_terms_117),
    .dout(din_x_117)
);
//defparam c118 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_117 = {
    scram_state[1],
    scram_state[39]
};

wire dout_w_117;
alt_e2550_xor3t1_hn c119 (
    .clk(clk),
    .din({din_x_117,scram_terms_117}),
    .dout(dout_w_117)
);
//defparam c119 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[59] = dout_w_117;

//////////////////////////////////////////////////
//  dout[60] has 5 terms
//////////////////////////////////////////////////

wire [2:0] din_terms_118 = {
    din[60],
    din[2],
    din[21]
};

wire din_x_118;
alt_e2550_xor3t1_hn c120 (
    .clk(clk),
    .din(din_terms_118),
    .dout(din_x_118)
);
//defparam c120 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_118 = {
    scram_state[2],
    scram_state[40]
};

wire dout_w_118;
alt_e2550_xor3t1_hn c121 (
    .clk(clk),
    .din({din_x_118,scram_terms_118}),
    .dout(dout_w_118)
);
//defparam c121 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[60] = dout_w_118;

//////////////////////////////////////////////////
//  dout[61] has 5 terms
//////////////////////////////////////////////////

wire [2:0] din_terms_119 = {
    din[61],
    din[3],
    din[22]
};

wire din_x_119;
alt_e2550_xor3t1_hn c122 (
    .clk(clk),
    .din(din_terms_119),
    .dout(din_x_119)
);
//defparam c122 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_119 = {
    scram_state[3],
    scram_state[41]
};

wire dout_w_119;
alt_e2550_xor3t1_hn c123 (
    .clk(clk),
    .din({din_x_119,scram_terms_119}),
    .dout(dout_w_119)
);
//defparam c123 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[61] = dout_w_119;

//////////////////////////////////////////////////
//  dout[62] has 5 terms
//////////////////////////////////////////////////

wire [2:0] din_terms_120 = {
    din[62],
    din[4],
    din[23]
};

wire din_x_120;
alt_e2550_xor3t1_hn c124 (
    .clk(clk),
    .din(din_terms_120),
    .dout(din_x_120)
);
//defparam c124 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_120 = {
    scram_state[4],
    scram_state[42]
};

wire dout_w_120;
alt_e2550_xor3t1_hn c125 (
    .clk(clk),
    .din({din_x_120,scram_terms_120}),
    .dout(dout_w_120)
);
//defparam c125 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[62] = dout_w_120;

//////////////////////////////////////////////////
//  dout[63] has 5 terms
//////////////////////////////////////////////////

wire [2:0] din_terms_121 = {
    din[63],
    din[5],
    din[24]
};

wire din_x_121;
alt_e2550_xor3t1_hn c126 (
    .clk(clk),
    .din(din_terms_121),
    .dout(din_x_121)
);
//defparam c126 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_121 = {
    scram_state[5],
    scram_state[43]
};

wire dout_w_121;
alt_e2550_xor3t1_hn c127 (
    .clk(clk),
    .din({din_x_121,scram_terms_121}),
    .dout(dout_w_121)
);
//defparam c127 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[63] = dout_w_121;

//////////////////////////////////////////////////
//  dout[64] has 5 terms
//////////////////////////////////////////////////

wire [2:0] din_terms_122 = {
    din[64],
    din[6],
    din[25]
};

wire din_x_122;
alt_e2550_xor3t1_hn c128 (
    .clk(clk),
    .din(din_terms_122),
    .dout(din_x_122)
);
//defparam c128 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_122 = {
    scram_state[6],
    scram_state[44]
};

wire dout_w_122;
alt_e2550_xor3t1_hn c129 (
    .clk(clk),
    .din({din_x_122,scram_terms_122}),
    .dout(dout_w_122)
);
//defparam c129 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[64] = dout_w_122;

//////////////////////////////////////////////////
//  dout[65] has 5 terms
//////////////////////////////////////////////////

wire [2:0] din_terms_123 = {
    din[65],
    din[7],
    din[26]
};

wire din_x_123;
alt_e2550_xor3t1_hn c130 (
    .clk(clk),
    .din(din_terms_123),
    .dout(din_x_123)
);
//defparam c130 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_123 = {
    scram_state[7],
    scram_state[45]
};

wire dout_w_123;
alt_e2550_xor3t1_hn c131 (
    .clk(clk),
    .din({din_x_123,scram_terms_123}),
    .dout(dout_w_123)
);
//defparam c131 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[65] = dout_w_123;

//////////////////////////////////////////////////
//  dout[66] has 5 terms
//////////////////////////////////////////////////

wire [2:0] din_terms_124 = {
    din[66],
    din[8],
    din[27]
};

wire din_x_124;
alt_e2550_xor3t1_hn c132 (
    .clk(clk),
    .din(din_terms_124),
    .dout(din_x_124)
);
//defparam c132 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_124 = {
    scram_state[8],
    scram_state[46]
};

wire dout_w_124;
alt_e2550_xor3t1_hn c133 (
    .clk(clk),
    .din({din_x_124,scram_terms_124}),
    .dout(dout_w_124)
);
//defparam c133 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[66] = dout_w_124;

//////////////////////////////////////////////////
//  dout[67] has 5 terms
//////////////////////////////////////////////////

wire [2:0] din_terms_125 = {
    din[67],
    din[9],
    din[28]
};

wire din_x_125;
alt_e2550_xor3t1_hn c134 (
    .clk(clk),
    .din(din_terms_125),
    .dout(din_x_125)
);
//defparam c134 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_125 = {
    scram_state[9],
    scram_state[47]
};

wire dout_w_125;
alt_e2550_xor3t1_hn c135 (
    .clk(clk),
    .din({din_x_125,scram_terms_125}),
    .dout(dout_w_125)
);
//defparam c135 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[67] = dout_w_125;

//////////////////////////////////////////////////
//  dout[68] has 5 terms
//////////////////////////////////////////////////

wire [2:0] din_terms_126 = {
    din[68],
    din[10],
    din[29]
};

wire din_x_126;
alt_e2550_xor3t1_hn c136 (
    .clk(clk),
    .din(din_terms_126),
    .dout(din_x_126)
);
//defparam c136 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_126 = {
    scram_state[10],
    scram_state[48]
};

wire dout_w_126;
alt_e2550_xor3t1_hn c137 (
    .clk(clk),
    .din({din_x_126,scram_terms_126}),
    .dout(dout_w_126)
);
//defparam c137 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[68] = dout_w_126;

//////////////////////////////////////////////////
//  dout[69] has 5 terms
//////////////////////////////////////////////////

wire [2:0] din_terms_127 = {
    din[69],
    din[11],
    din[30]
};

wire din_x_127;
alt_e2550_xor3t1_hn c138 (
    .clk(clk),
    .din(din_terms_127),
    .dout(din_x_127)
);
//defparam c138 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_127 = {
    scram_state[11],
    scram_state[49]
};

wire dout_w_127;
alt_e2550_xor3t1_hn c139 (
    .clk(clk),
    .din({din_x_127,scram_terms_127}),
    .dout(dout_w_127)
);
//defparam c139 .SIM_EMULATE = SIM_EMULATE;

assign dout_tem[69] = dout_w_127;

//////////////////////////////////////////////////
//  dout[70]  next_state[0] has 5 terms
//////////////////////////////////////////////////

wire [2:0] din_terms_128 = {
    din[70],
    din[12],
    din[31]
};

wire din_x_128;
alt_e2550_xor3t1_hn c140 (
    .clk(clk),
    .din(din_terms_128),
    .dout(din_x_128)
);
//defparam c140 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_128 = {
    scram_state[12],
    scram_state[50]
};

wire dout_w_128_i;
alt_e2550_xor3t0_hn c141 (
    .din({din_x_128,scram_terms_128}),
    .dout(dout_w_128_i)
);
//defparam c141 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_128 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_128 <= dout_w_128_i;
end

assign dout_tem[70] = dout_w_128;
assign scram_state[0] = dout_w_128;

//////////////////////////////////////////////////
//  dout[71]  next_state[1] has 5 terms
//////////////////////////////////////////////////

wire [2:0] din_terms_129 = {
    din[71],
    din[13],
    din[32]
};

wire din_x_129;
alt_e2550_xor3t1_hn c142 (
    .clk(clk),
    .din(din_terms_129),
    .dout(din_x_129)
);
//defparam c142 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_129 = {
    scram_state[13],
    scram_state[51]
};

wire dout_w_129_i;
alt_e2550_xor3t0_hn c143 (
    .din({din_x_129,scram_terms_129}),
    .dout(dout_w_129_i)
);
//defparam c143 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_129 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_129 <= dout_w_129_i;
end

assign dout_tem[71] = dout_w_129;
assign scram_state[1] = dout_w_129;

//////////////////////////////////////////////////
//  dout[72]  next_state[2] has 5 terms
//////////////////////////////////////////////////

wire [2:0] din_terms_130 = {
    din[72],
    din[14],
    din[33]
};

wire din_x_130;
alt_e2550_xor3t1_hn c144 (
    .clk(clk),
    .din(din_terms_130),
    .dout(din_x_130)
);
//defparam c144 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_130 = {
    scram_state[14],
    scram_state[52]
};

wire dout_w_130_i;
alt_e2550_xor3t0_hn c145 (
    .din({din_x_130,scram_terms_130}),
    .dout(dout_w_130_i)
);
//defparam c145 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_130 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_130 <= dout_w_130_i;
end

assign dout_tem[72] = dout_w_130;
assign scram_state[2] = dout_w_130;

//////////////////////////////////////////////////
//  dout[73]  next_state[3] has 5 terms
//////////////////////////////////////////////////

wire [2:0] din_terms_131 = {
    din[73],
    din[15],
    din[34]
};

wire din_x_131;
alt_e2550_xor3t1_hn c146 (
    .clk(clk),
    .din(din_terms_131),
    .dout(din_x_131)
);
//defparam c146 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_131 = {
    scram_state[15],
    scram_state[53]
};

wire dout_w_131_i;
alt_e2550_xor3t0_hn c147 (
    .din({din_x_131,scram_terms_131}),
    .dout(dout_w_131_i)
);
//defparam c147 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_131 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_131 <= dout_w_131_i;
end

assign dout_tem[73] = dout_w_131;
assign scram_state[3] = dout_w_131;

//////////////////////////////////////////////////
//  dout[74]  next_state[4] has 5 terms
//////////////////////////////////////////////////

wire [2:0] din_terms_132 = {
    din[74],
    din[16],
    din[35]
};

wire din_x_132;
alt_e2550_xor3t1_hn c148 (
    .clk(clk),
    .din(din_terms_132),
    .dout(din_x_132)
);
//defparam c148 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_132 = {
    scram_state[16],
    scram_state[54]
};

wire dout_w_132_i;
alt_e2550_xor3t0_hn c149 (
    .din({din_x_132,scram_terms_132}),
    .dout(dout_w_132_i)
);
//defparam c149 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_132 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_132 <= dout_w_132_i;
end

assign dout_tem[74] = dout_w_132;
assign scram_state[4] = dout_w_132;

//////////////////////////////////////////////////
//  dout[75]  next_state[5] has 5 terms
//////////////////////////////////////////////////

wire [2:0] din_terms_133 = {
    din[75],
    din[17],
    din[36]
};

wire din_x_133;
alt_e2550_xor3t1_hn c150 (
    .clk(clk),
    .din(din_terms_133),
    .dout(din_x_133)
);
//defparam c150 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_133 = {
    scram_state[17],
    scram_state[55]
};

wire dout_w_133_i;
alt_e2550_xor3t0_hn c151 (
    .din({din_x_133,scram_terms_133}),
    .dout(dout_w_133_i)
);
//defparam c151 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_133 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_133 <= dout_w_133_i;
end

assign dout_tem[75] = dout_w_133;
assign scram_state[5] = dout_w_133;

//////////////////////////////////////////////////
//  dout[76]  next_state[6] has 5 terms
//////////////////////////////////////////////////

wire [2:0] din_terms_134 = {
    din[76],
    din[18],
    din[37]
};

wire din_x_134;
alt_e2550_xor3t1_hn c152 (
    .clk(clk),
    .din(din_terms_134),
    .dout(din_x_134)
);
//defparam c152 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_134 = {
    scram_state[18],
    scram_state[56]
};

wire dout_w_134_i;
alt_e2550_xor3t0_hn c153 (
    .din({din_x_134,scram_terms_134}),
    .dout(dout_w_134_i)
);
//defparam c153 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_134 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_134 <= dout_w_134_i;
end

assign dout_tem[76] = dout_w_134;
assign scram_state[6] = dout_w_134;

//////////////////////////////////////////////////
//  dout[77]  next_state[7] has 5 terms
//////////////////////////////////////////////////

wire [2:0] din_terms_135 = {
    din[77],
    din[19],
    din[38]
};

wire din_x_135;
alt_e2550_xor3t1_hn c154 (
    .clk(clk),
    .din(din_terms_135),
    .dout(din_x_135)
);
//defparam c154 .SIM_EMULATE = SIM_EMULATE;

wire [1:0] scram_terms_135 = {
    scram_state[19],
    scram_state[57]
};

wire dout_w_135_i;
alt_e2550_xor3t0_hn c155 (
    .din({din_x_135,scram_terms_135}),
    .dout(dout_w_135_i)
);
//defparam c155 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_135 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_135 <= dout_w_135_i;
end

assign dout_tem[77] = dout_w_135;
assign scram_state[7] = dout_w_135;

//////////////////////////////////////////////////
//  dout[78]  next_state[8] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_136 = {
    din[78],
    din[20],
    din[39],
    din[0]
};

wire din_x_136;
alt_e2550_xor4t1_hn c156 (
    .clk(clk),
    .din(din_terms_136),
    .dout(din_x_136)
);
//defparam c156 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_136 = {
    scram_state[20],
    scram_state[0],
    scram_state[19]
};

wire dout_w_136_i;
alt_e2550_xor4t0_hn c157 (
    .din({din_x_136,scram_terms_136}),
    .dout(dout_w_136_i)
);
//defparam c157 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_136 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_136 <= dout_w_136_i;
end

assign dout_tem[78] = dout_w_136;
assign scram_state[8] = dout_w_136;

//////////////////////////////////////////////////
//  dout[79]  next_state[9] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_137 = {
    din[79],
    din[21],
    din[40],
    din[1]
};

wire din_x_137;
alt_e2550_xor4t1_hn c158 (
    .clk(clk),
    .din(din_terms_137),
    .dout(din_x_137)
);
//defparam c158 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_137 = {
    scram_state[21],
    scram_state[1],
    scram_state[20]
};

wire dout_w_137_i;
alt_e2550_xor4t0_hn c159 (
    .din({din_x_137,scram_terms_137}),
    .dout(dout_w_137_i)
);
//defparam c159 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_137 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_137 <= dout_w_137_i;
end

assign dout_tem[79] = dout_w_137;
assign scram_state[9] = dout_w_137;

//////////////////////////////////////////////////
//  dout[80]  next_state[10] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_138 = {
    din[80],
    din[22],
    din[41],
    din[2]
};

wire din_x_138;
alt_e2550_xor4t1_hn c160 (
    .clk(clk),
    .din(din_terms_138),
    .dout(din_x_138)
);
//defparam c160 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_138 = {
    scram_state[22],
    scram_state[2],
    scram_state[21]
};

wire dout_w_138_i;
alt_e2550_xor4t0_hn c161 (
    .din({din_x_138,scram_terms_138}),
    .dout(dout_w_138_i)
);
//defparam c161 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_138 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_138 <= dout_w_138_i;
end

assign dout_tem[80] = dout_w_138;
assign scram_state[10] = dout_w_138;

//////////////////////////////////////////////////
//  dout[81]  next_state[11] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_139 = {
    din[81],
    din[23],
    din[42],
    din[3]
};

wire din_x_139;
alt_e2550_xor4t1_hn c162 (
    .clk(clk),
    .din(din_terms_139),
    .dout(din_x_139)
);
//defparam c162 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_139 = {
    scram_state[23],
    scram_state[3],
    scram_state[22]
};

wire dout_w_139_i;
alt_e2550_xor4t0_hn c163 (
    .din({din_x_139,scram_terms_139}),
    .dout(dout_w_139_i)
);
//defparam c163 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_139 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_139 <= dout_w_139_i;
end

assign dout_tem[81] = dout_w_139;
assign scram_state[11] = dout_w_139;

//////////////////////////////////////////////////
//  dout[82]  next_state[12] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_140 = {
    din[82],
    din[24],
    din[43],
    din[4]
};

wire din_x_140;
alt_e2550_xor4t1_hn c164 (
    .clk(clk),
    .din(din_terms_140),
    .dout(din_x_140)
);
//defparam c164 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_140 = {
    scram_state[24],
    scram_state[4],
    scram_state[23]
};

wire dout_w_140_i;
alt_e2550_xor4t0_hn c165 (
    .din({din_x_140,scram_terms_140}),
    .dout(dout_w_140_i)
);
//defparam c165 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_140 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_140 <= dout_w_140_i;
end

assign dout_tem[82] = dout_w_140;
assign scram_state[12] = dout_w_140;

//////////////////////////////////////////////////
//  dout[83]  next_state[13] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_141 = {
    din[83],
    din[25],
    din[44],
    din[5]
};

wire din_x_141;
alt_e2550_xor4t1_hn c166 (
    .clk(clk),
    .din(din_terms_141),
    .dout(din_x_141)
);
//defparam c166 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_141 = {
    scram_state[25],
    scram_state[5],
    scram_state[24]
};

wire dout_w_141_i;
alt_e2550_xor4t0_hn c167 (
    .din({din_x_141,scram_terms_141}),
    .dout(dout_w_141_i)
);
//defparam c167 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_141 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_141 <= dout_w_141_i;
end

assign dout_tem[83] = dout_w_141;
assign scram_state[13] = dout_w_141;

//////////////////////////////////////////////////
//  dout[84]  next_state[14] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_142 = {
    din[84],
    din[26],
    din[45],
    din[6]
};

wire din_x_142;
alt_e2550_xor4t1_hn c168 (
    .clk(clk),
    .din(din_terms_142),
    .dout(din_x_142)
);
//defparam c168 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_142 = {
    scram_state[26],
    scram_state[6],
    scram_state[25]
};

wire dout_w_142_i;
alt_e2550_xor4t0_hn c169 (
    .din({din_x_142,scram_terms_142}),
    .dout(dout_w_142_i)
);
//defparam c169 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_142 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_142 <= dout_w_142_i;
end

assign dout_tem[84] = dout_w_142;
assign scram_state[14] = dout_w_142;

//////////////////////////////////////////////////
//  dout[85]  next_state[15] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_143 = {
    din[85],
    din[27],
    din[46],
    din[7]
};

wire din_x_143;
alt_e2550_xor4t1_hn c170 (
    .clk(clk),
    .din(din_terms_143),
    .dout(din_x_143)
);
//defparam c170 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_143 = {
    scram_state[27],
    scram_state[7],
    scram_state[26]
};

wire dout_w_143_i;
alt_e2550_xor4t0_hn c171 (
    .din({din_x_143,scram_terms_143}),
    .dout(dout_w_143_i)
);
//defparam c171 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_143 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_143 <= dout_w_143_i;
end

assign dout_tem[85] = dout_w_143;
assign scram_state[15] = dout_w_143;

//////////////////////////////////////////////////
//  dout[86]  next_state[16] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_144 = {
    din[86],
    din[28],
    din[47],
    din[8]
};

wire din_x_144;
alt_e2550_xor4t1_hn c172 (
    .clk(clk),
    .din(din_terms_144),
    .dout(din_x_144)
);
//defparam c172 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_144 = {
    scram_state[28],
    scram_state[8],
    scram_state[27]
};

wire dout_w_144_i;
alt_e2550_xor4t0_hn c173 (
    .din({din_x_144,scram_terms_144}),
    .dout(dout_w_144_i)
);
//defparam c173 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_144 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_144 <= dout_w_144_i;
end

assign dout_tem[86] = dout_w_144;
assign scram_state[16] = dout_w_144;

//////////////////////////////////////////////////
//  dout[87]  next_state[17] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_145 = {
    din[87],
    din[29],
    din[48],
    din[9]
};

wire din_x_145;
alt_e2550_xor4t1_hn c174 (
    .clk(clk),
    .din(din_terms_145),
    .dout(din_x_145)
);
//defparam c174 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_145 = {
    scram_state[29],
    scram_state[9],
    scram_state[28]
};

wire dout_w_145_i;
alt_e2550_xor4t0_hn c175 (
    .din({din_x_145,scram_terms_145}),
    .dout(dout_w_145_i)
);
//defparam c175 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_145 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_145 <= dout_w_145_i;
end

assign dout_tem[87] = dout_w_145;
assign scram_state[17] = dout_w_145;

//////////////////////////////////////////////////
//  dout[88]  next_state[18] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_146 = {
    din[88],
    din[30],
    din[49],
    din[10]
};

wire din_x_146;
alt_e2550_xor4t1_hn c176 (
    .clk(clk),
    .din(din_terms_146),
    .dout(din_x_146)
);
//defparam c176 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_146 = {
    scram_state[30],
    scram_state[10],
    scram_state[29]
};

wire dout_w_146_i;
alt_e2550_xor4t0_hn c177 (
    .din({din_x_146,scram_terms_146}),
    .dout(dout_w_146_i)
);
//defparam c177 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_146 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_146 <= dout_w_146_i;
end

assign dout_tem[88] = dout_w_146;
assign scram_state[18] = dout_w_146;

//////////////////////////////////////////////////
//  dout[89]  next_state[19] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_147 = {
    din[89],
    din[31],
    din[50],
    din[11]
};

wire din_x_147;
alt_e2550_xor4t1_hn c178 (
    .clk(clk),
    .din(din_terms_147),
    .dout(din_x_147)
);
//defparam c178 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_147 = {
    scram_state[31],
    scram_state[11],
    scram_state[30]
};

wire dout_w_147_i;
alt_e2550_xor4t0_hn c179 (
    .din({din_x_147,scram_terms_147}),
    .dout(dout_w_147_i)
);
//defparam c179 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_147 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_147 <= dout_w_147_i;
end

assign dout_tem[89] = dout_w_147;
assign scram_state[19] = dout_w_147;

//////////////////////////////////////////////////
//  dout[90]  next_state[20] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_148 = {
    din[90],
    din[32],
    din[51],
    din[12]
};

wire din_x_148;
alt_e2550_xor4t1_hn c180 (
    .clk(clk),
    .din(din_terms_148),
    .dout(din_x_148)
);
//defparam c180 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_148 = {
    scram_state[32],
    scram_state[12],
    scram_state[31]
};

wire dout_w_148_i;
alt_e2550_xor4t0_hn c181 (
    .din({din_x_148,scram_terms_148}),
    .dout(dout_w_148_i)
);
//defparam c181 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_148 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_148 <= dout_w_148_i;
end

assign dout_tem[90] = dout_w_148;
assign scram_state[20] = dout_w_148;

//////////////////////////////////////////////////
//  dout[91]  next_state[21] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_149 = {
    din[91],
    din[33],
    din[52],
    din[13]
};

wire din_x_149;
alt_e2550_xor4t1_hn c182 (
    .clk(clk),
    .din(din_terms_149),
    .dout(din_x_149)
);
//defparam c182 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_149 = {
    scram_state[33],
    scram_state[13],
    scram_state[32]
};

wire dout_w_149_i;
alt_e2550_xor4t0_hn c183 (
    .din({din_x_149,scram_terms_149}),
    .dout(dout_w_149_i)
);
//defparam c183 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_149 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_149 <= dout_w_149_i;
end

assign dout_tem[91] = dout_w_149;
assign scram_state[21] = dout_w_149;

//////////////////////////////////////////////////
//  dout[92]  next_state[22] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_150 = {
    din[92],
    din[34],
    din[53],
    din[14]
};

wire din_x_150;
alt_e2550_xor4t1_hn c184 (
    .clk(clk),
    .din(din_terms_150),
    .dout(din_x_150)
);
//defparam c184 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_150 = {
    scram_state[34],
    scram_state[14],
    scram_state[33]
};

wire dout_w_150_i;
alt_e2550_xor4t0_hn c185 (
    .din({din_x_150,scram_terms_150}),
    .dout(dout_w_150_i)
);
//defparam c185 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_150 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_150 <= dout_w_150_i;
end

assign dout_tem[92] = dout_w_150;
assign scram_state[22] = dout_w_150;

//////////////////////////////////////////////////
//  dout[93]  next_state[23] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_151 = {
    din[93],
    din[35],
    din[54],
    din[15]
};

wire din_x_151;
alt_e2550_xor4t1_hn c186 (
    .clk(clk),
    .din(din_terms_151),
    .dout(din_x_151)
);
//defparam c186 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_151 = {
    scram_state[35],
    scram_state[15],
    scram_state[34]
};

wire dout_w_151_i;
alt_e2550_xor4t0_hn c187 (
    .din({din_x_151,scram_terms_151}),
    .dout(dout_w_151_i)
);
//defparam c187 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_151 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_151 <= dout_w_151_i;
end

assign dout_tem[93] = dout_w_151;
assign scram_state[23] = dout_w_151;

//////////////////////////////////////////////////
//  dout[94]  next_state[24] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_152 = {
    din[94],
    din[36],
    din[55],
    din[16]
};

wire din_x_152;
alt_e2550_xor4t1_hn c188 (
    .clk(clk),
    .din(din_terms_152),
    .dout(din_x_152)
);
//defparam c188 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_152 = {
    scram_state[36],
    scram_state[16],
    scram_state[35]
};

wire dout_w_152_i;
alt_e2550_xor4t0_hn c189 (
    .din({din_x_152,scram_terms_152}),
    .dout(dout_w_152_i)
);
//defparam c189 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_152 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_152 <= dout_w_152_i;
end

assign dout_tem[94] = dout_w_152;
assign scram_state[24] = dout_w_152;

//////////////////////////////////////////////////
//  dout[95]  next_state[25] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_153 = {
    din[95],
    din[37],
    din[56],
    din[17]
};

wire din_x_153;
alt_e2550_xor4t1_hn c190 (
    .clk(clk),
    .din(din_terms_153),
    .dout(din_x_153)
);
//defparam c190 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_153 = {
    scram_state[37],
    scram_state[17],
    scram_state[36]
};

wire dout_w_153_i;
alt_e2550_xor4t0_hn c191 (
    .din({din_x_153,scram_terms_153}),
    .dout(dout_w_153_i)
);
//defparam c191 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_153 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_153 <= dout_w_153_i;
end

assign dout_tem[95] = dout_w_153;
assign scram_state[25] = dout_w_153;

//////////////////////////////////////////////////
//  dout[96]  next_state[26] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_154 = {
    din[96],
    din[38],
    din[57],
    din[18]
};

wire din_x_154;
alt_e2550_xor4t1_hn c192 (
    .clk(clk),
    .din(din_terms_154),
    .dout(din_x_154)
);
//defparam c192 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_154 = {
    scram_state[38],
    scram_state[18],
    scram_state[37]
};

wire dout_w_154_i;
alt_e2550_xor4t0_hn c193 (
    .din({din_x_154,scram_terms_154}),
    .dout(dout_w_154_i)
);
//defparam c193 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_154 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_154 <= dout_w_154_i;
end

assign dout_tem[96] = dout_w_154;
assign scram_state[26] = dout_w_154;

//////////////////////////////////////////////////
//  dout[97]  next_state[27] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_155 = {
    din[97],
    din[39],
    din[58],
    din[19]
};

wire din_x_155;
alt_e2550_xor4t1_hn c194 (
    .clk(clk),
    .din(din_terms_155),
    .dout(din_x_155)
);
//defparam c194 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_155 = {
    scram_state[39],
    scram_state[19],
    scram_state[38]
};

wire dout_w_155_i;
alt_e2550_xor4t0_hn c195 (
    .din({din_x_155,scram_terms_155}),
    .dout(dout_w_155_i)
);
//defparam c195 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_155 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_155 <= dout_w_155_i;
end

assign dout_tem[97] = dout_w_155;
assign scram_state[27] = dout_w_155;

//////////////////////////////////////////////////
//  dout[98]  next_state[28] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_156 = {
    din[98],
    din[40],
    din[59],
    din[20]
};

wire din_x_156;
alt_e2550_xor4t1_hn c196 (
    .clk(clk),
    .din(din_terms_156),
    .dout(din_x_156)
);
//defparam c196 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_156 = {
    scram_state[40],
    scram_state[20],
    scram_state[39]
};

wire dout_w_156_i;
alt_e2550_xor4t0_hn c197 (
    .din({din_x_156,scram_terms_156}),
    .dout(dout_w_156_i)
);
//defparam c197 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_156 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_156 <= dout_w_156_i;
end

assign dout_tem[98] = dout_w_156;
assign scram_state[28] = dout_w_156;

//////////////////////////////////////////////////
//  dout[99]  next_state[29] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_157 = {
    din[99],
    din[41],
    din[60],
    din[21]
};

wire din_x_157;
alt_e2550_xor4t1_hn c198 (
    .clk(clk),
    .din(din_terms_157),
    .dout(din_x_157)
);
//defparam c198 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_157 = {
    scram_state[41],
    scram_state[21],
    scram_state[40]
};

wire dout_w_157_i;
alt_e2550_xor4t0_hn c199 (
    .din({din_x_157,scram_terms_157}),
    .dout(dout_w_157_i)
);
//defparam c199 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_157 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_157 <= dout_w_157_i;
end

assign dout_tem[99] = dout_w_157;
assign scram_state[29] = dout_w_157;

//////////////////////////////////////////////////
//  dout[100]  next_state[30] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_158 = {
    din[100],
    din[42],
    din[61],
    din[22]
};

wire din_x_158;
alt_e2550_xor4t1_hn c200 (
    .clk(clk),
    .din(din_terms_158),
    .dout(din_x_158)
);
//defparam c200 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_158 = {
    scram_state[42],
    scram_state[22],
    scram_state[41]
};

wire dout_w_158_i;
alt_e2550_xor4t0_hn c201 (
    .din({din_x_158,scram_terms_158}),
    .dout(dout_w_158_i)
);
//defparam c201 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_158 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_158 <= dout_w_158_i;
end

assign dout_tem[100] = dout_w_158;
assign scram_state[30] = dout_w_158;

//////////////////////////////////////////////////
//  dout[101]  next_state[31] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_159 = {
    din[101],
    din[43],
    din[62],
    din[23]
};

wire din_x_159;
alt_e2550_xor4t1_hn c202 (
    .clk(clk),
    .din(din_terms_159),
    .dout(din_x_159)
);
//defparam c202 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_159 = {
    scram_state[43],
    scram_state[23],
    scram_state[42]
};

wire dout_w_159_i;
alt_e2550_xor4t0_hn c203 (
    .din({din_x_159,scram_terms_159}),
    .dout(dout_w_159_i)
);
//defparam c203 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_159 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_159 <= dout_w_159_i;
end

assign dout_tem[101] = dout_w_159;
assign scram_state[31] = dout_w_159;

//////////////////////////////////////////////////
//  dout[102]  next_state[32] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_160 = {
    din[102],
    din[44],
    din[63],
    din[24]
};

wire din_x_160;
alt_e2550_xor4t1_hn c204 (
    .clk(clk),
    .din(din_terms_160),
    .dout(din_x_160)
);
//defparam c204 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_160 = {
    scram_state[44],
    scram_state[24],
    scram_state[43]
};

wire dout_w_160_i;
alt_e2550_xor4t0_hn c205 (
    .din({din_x_160,scram_terms_160}),
    .dout(dout_w_160_i)
);
//defparam c205 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_160 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_160 <= dout_w_160_i;
end

assign dout_tem[102] = dout_w_160;
assign scram_state[32] = dout_w_160;

//////////////////////////////////////////////////
//  dout[103]  next_state[33] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_161 = {
    din[103],
    din[45],
    din[64],
    din[25]
};

wire din_x_161;
alt_e2550_xor4t1_hn c206 (
    .clk(clk),
    .din(din_terms_161),
    .dout(din_x_161)
);
//defparam c206 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_161 = {
    scram_state[45],
    scram_state[25],
    scram_state[44]
};

wire dout_w_161_i;
alt_e2550_xor4t0_hn c207 (
    .din({din_x_161,scram_terms_161}),
    .dout(dout_w_161_i)
);
//defparam c207 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_161 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_161 <= dout_w_161_i;
end

assign dout_tem[103] = dout_w_161;
assign scram_state[33] = dout_w_161;

//////////////////////////////////////////////////
//  dout[104]  next_state[34] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_162 = {
    din[104],
    din[46],
    din[65],
    din[26]
};

wire din_x_162;
alt_e2550_xor4t1_hn c208 (
    .clk(clk),
    .din(din_terms_162),
    .dout(din_x_162)
);
//defparam c208 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_162 = {
    scram_state[46],
    scram_state[26],
    scram_state[45]
};

wire dout_w_162_i;
alt_e2550_xor4t0_hn c209 (
    .din({din_x_162,scram_terms_162}),
    .dout(dout_w_162_i)
);
//defparam c209 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_162 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_162 <= dout_w_162_i;
end

assign dout_tem[104] = dout_w_162;
assign scram_state[34] = dout_w_162;

//////////////////////////////////////////////////
//  dout[105]  next_state[35] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_163 = {
    din[105],
    din[47],
    din[66],
    din[27]
};

wire din_x_163;
alt_e2550_xor4t1_hn c210 (
    .clk(clk),
    .din(din_terms_163),
    .dout(din_x_163)
);
//defparam c210 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_163 = {
    scram_state[47],
    scram_state[27],
    scram_state[46]
};

wire dout_w_163_i;
alt_e2550_xor4t0_hn c211 (
    .din({din_x_163,scram_terms_163}),
    .dout(dout_w_163_i)
);
//defparam c211 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_163 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_163 <= dout_w_163_i;
end

assign dout_tem[105] = dout_w_163;
assign scram_state[35] = dout_w_163;

//////////////////////////////////////////////////
//  dout[106]  next_state[36] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_164 = {
    din[106],
    din[48],
    din[67],
    din[28]
};

wire din_x_164;
alt_e2550_xor4t1_hn c212 (
    .clk(clk),
    .din(din_terms_164),
    .dout(din_x_164)
);
//defparam c212 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_164 = {
    scram_state[48],
    scram_state[28],
    scram_state[47]
};

wire dout_w_164_i;
alt_e2550_xor4t0_hn c213 (
    .din({din_x_164,scram_terms_164}),
    .dout(dout_w_164_i)
);
//defparam c213 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_164 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_164 <= dout_w_164_i;
end

assign dout_tem[106] = dout_w_164;
assign scram_state[36] = dout_w_164;

//////////////////////////////////////////////////
//  dout[107]  next_state[37] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_165 = {
    din[107],
    din[49],
    din[68],
    din[29]
};

wire din_x_165;
alt_e2550_xor4t1_hn c214 (
    .clk(clk),
    .din(din_terms_165),
    .dout(din_x_165)
);
//defparam c214 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_165 = {
    scram_state[49],
    scram_state[29],
    scram_state[48]
};

wire dout_w_165_i;
alt_e2550_xor4t0_hn c215 (
    .din({din_x_165,scram_terms_165}),
    .dout(dout_w_165_i)
);
//defparam c215 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_165 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_165 <= dout_w_165_i;
end

assign dout_tem[107] = dout_w_165;
assign scram_state[37] = dout_w_165;

//////////////////////////////////////////////////
//  dout[108]  next_state[38] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_166 = {
    din[108],
    din[50],
    din[69],
    din[30]
};

wire din_x_166;
alt_e2550_xor4t1_hn c216 (
    .clk(clk),
    .din(din_terms_166),
    .dout(din_x_166)
);
//defparam c216 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_166 = {
    scram_state[50],
    scram_state[30],
    scram_state[49]
};

wire dout_w_166_i;
alt_e2550_xor4t0_hn c217 (
    .din({din_x_166,scram_terms_166}),
    .dout(dout_w_166_i)
);
//defparam c217 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_166 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_166 <= dout_w_166_i;
end

assign dout_tem[108] = dout_w_166;
assign scram_state[38] = dout_w_166;

//////////////////////////////////////////////////
//  dout[109]  next_state[39] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_167 = {
    din[109],
    din[51],
    din[70],
    din[31]
};

wire din_x_167;
alt_e2550_xor4t1_hn c218 (
    .clk(clk),
    .din(din_terms_167),
    .dout(din_x_167)
);
//defparam c218 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_167 = {
    scram_state[51],
    scram_state[31],
    scram_state[50]
};

wire dout_w_167_i;
alt_e2550_xor4t0_hn c219 (
    .din({din_x_167,scram_terms_167}),
    .dout(dout_w_167_i)
);
//defparam c219 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_167 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_167 <= dout_w_167_i;
end

assign dout_tem[109] = dout_w_167;
assign scram_state[39] = dout_w_167;

//////////////////////////////////////////////////
//  dout[110]  next_state[40] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_168 = {
    din[110],
    din[52],
    din[71],
    din[32]
};

wire din_x_168;
alt_e2550_xor4t1_hn c220 (
    .clk(clk),
    .din(din_terms_168),
    .dout(din_x_168)
);
//defparam c220 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_168 = {
    scram_state[52],
    scram_state[32],
    scram_state[51]
};

wire dout_w_168_i;
alt_e2550_xor4t0_hn c221 (
    .din({din_x_168,scram_terms_168}),
    .dout(dout_w_168_i)
);
//defparam c221 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_168 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_168 <= dout_w_168_i;
end

assign dout_tem[110] = dout_w_168;
assign scram_state[40] = dout_w_168;

//////////////////////////////////////////////////
//  dout[111]  next_state[41] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_169 = {
    din[111],
    din[53],
    din[72],
    din[33]
};

wire din_x_169;
alt_e2550_xor4t1_hn c222 (
    .clk(clk),
    .din(din_terms_169),
    .dout(din_x_169)
);
//defparam c222 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_169 = {
    scram_state[53],
    scram_state[33],
    scram_state[52]
};

wire dout_w_169_i;
alt_e2550_xor4t0_hn c223 (
    .din({din_x_169,scram_terms_169}),
    .dout(dout_w_169_i)
);
//defparam c223 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_169 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_169 <= dout_w_169_i;
end

assign dout_tem[111] = dout_w_169;
assign scram_state[41] = dout_w_169;

//////////////////////////////////////////////////
//  dout[112]  next_state[42] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_170 = {
    din[112],
    din[54],
    din[73],
    din[34]
};

wire din_x_170;
alt_e2550_xor4t1_hn c224 (
    .clk(clk),
    .din(din_terms_170),
    .dout(din_x_170)
);
//defparam c224 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_170 = {
    scram_state[54],
    scram_state[34],
    scram_state[53]
};

wire dout_w_170_i;
alt_e2550_xor4t0_hn c225 (
    .din({din_x_170,scram_terms_170}),
    .dout(dout_w_170_i)
);
//defparam c225 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_170 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_170 <= dout_w_170_i;
end

assign dout_tem[112] = dout_w_170;
assign scram_state[42] = dout_w_170;

//////////////////////////////////////////////////
//  dout[113]  next_state[43] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_171 = {
    din[113],
    din[55],
    din[74],
    din[35]
};

wire din_x_171;
alt_e2550_xor4t1_hn c226 (
    .clk(clk),
    .din(din_terms_171),
    .dout(din_x_171)
);
//defparam c226 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_171 = {
    scram_state[55],
    scram_state[35],
    scram_state[54]
};

wire dout_w_171_i;
alt_e2550_xor4t0_hn c227 (
    .din({din_x_171,scram_terms_171}),
    .dout(dout_w_171_i)
);
//defparam c227 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_171 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_171 <= dout_w_171_i;
end

assign dout_tem[113] = dout_w_171;
assign scram_state[43] = dout_w_171;

//////////////////////////////////////////////////
//  dout[114]  next_state[44] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_172 = {
    din[114],
    din[56],
    din[75],
    din[36]
};

wire din_x_172;
alt_e2550_xor4t1_hn c228 (
    .clk(clk),
    .din(din_terms_172),
    .dout(din_x_172)
);
//defparam c228 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_172 = {
    scram_state[56],
    scram_state[36],
    scram_state[55]
};

wire dout_w_172_i;
alt_e2550_xor4t0_hn c229 (
    .din({din_x_172,scram_terms_172}),
    .dout(dout_w_172_i)
);
//defparam c229 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_172 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_172 <= dout_w_172_i;
end

assign dout_tem[114] = dout_w_172;
assign scram_state[44] = dout_w_172;

//////////////////////////////////////////////////
//  dout[115]  next_state[45] has 7 terms
//////////////////////////////////////////////////

wire [3:0] din_terms_173 = {
    din[115],
    din[57],
    din[76],
    din[37]
};

wire din_x_173;
alt_e2550_xor4t1_hn c230 (
    .clk(clk),
    .din(din_terms_173),
    .dout(din_x_173)
);
//defparam c230 .SIM_EMULATE = SIM_EMULATE;

wire [2:0] scram_terms_173 = {
    scram_state[57],
    scram_state[37],
    scram_state[56]
};

wire dout_w_173_i;
alt_e2550_xor4t0_hn c231 (
    .din({din_x_173,scram_terms_173}),
    .dout(dout_w_173_i)
);
//defparam c231 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_173 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_173 <= dout_w_173_i;
end

assign dout_tem[115] = dout_w_173;
assign scram_state[45] = dout_w_173;

//////////////////////////////////////////////////
//  dout[116]  next_state[46] has 9 terms
//////////////////////////////////////////////////

wire [4:0] din_terms_174 = {
    din[116],
    din[58],
    din[0],
    din[77],
    din[38]
};

wire din_x_174;
alt_e2550_xor5t1_hn c232 (
    .clk(clk),
    .din(din_terms_174),
    .dout(din_x_174)
);
//defparam c232 .SIM_EMULATE = SIM_EMULATE;

wire [3:0] scram_terms_174 = {
    scram_state[0],
    scram_state[19],
    scram_state[38],
    scram_state[57]
};

wire dout_w_174_i;
alt_e2550_xor5t0_hn c233 (
    .din({din_x_174,scram_terms_174}),
    .dout(dout_w_174_i)
);
//defparam c233 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_174 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_174 <= dout_w_174_i;
end

assign dout_tem[116] = dout_w_174;
assign scram_state[46] = dout_w_174;

//////////////////////////////////////////////////
//  dout[117]  next_state[47] has 11 terms
//////////////////////////////////////////////////

wire [5:0] din_terms_175 = {
    din[117],
    din[59],
    din[1],
    din[78],
    din[39],
    din[0]
};

wire din_x_175;
alt_e2550_xor6t1_hn c234 (
    .clk(clk),
    .din(din_terms_175),
    .dout(din_x_175)
);
//defparam c234 .SIM_EMULATE = SIM_EMULATE;

wire [4:0] scram_terms_175 = {
    scram_state[1],
    scram_state[20],
    scram_state[39],
    scram_state[0],
    scram_state[19]
};

wire dout_w_175_i;
alt_e2550_xor6t0_hn c235 (
    .din({din_x_175,scram_terms_175}),
    .dout(dout_w_175_i)
);
//defparam c235 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_175 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_175 <= dout_w_175_i;
end

assign dout_tem[117] = dout_w_175;
assign scram_state[47] = dout_w_175;

//////////////////////////////////////////////////
//  dout[118]  next_state[48] has 11 terms
//////////////////////////////////////////////////

wire [5:0] din_terms_176 = {
    din[118],
    din[60],
    din[2],
    din[79],
    din[40],
    din[1]
};

wire din_x_176;
alt_e2550_xor6t1_hn c236 (
    .clk(clk),
    .din(din_terms_176),
    .dout(din_x_176)
);
//defparam c236 .SIM_EMULATE = SIM_EMULATE;

wire [4:0] scram_terms_176 = {
    scram_state[2],
    scram_state[21],
    scram_state[40],
    scram_state[1],
    scram_state[20]
};

wire dout_w_176_i;
alt_e2550_xor6t0_hn c237 (
    .din({din_x_176,scram_terms_176}),
    .dout(dout_w_176_i)
);
//defparam c237 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_176 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_176 <= dout_w_176_i;
end

assign dout_tem[118] = dout_w_176;
assign scram_state[48] = dout_w_176;

//////////////////////////////////////////////////
//  dout[119]  next_state[49] has 11 terms
//////////////////////////////////////////////////

wire [5:0] din_terms_177 = {
    din[119],
    din[61],
    din[3],
    din[80],
    din[41],
    din[2]
};

wire din_x_177;
alt_e2550_xor6t1_hn c238 (
    .clk(clk),
    .din(din_terms_177),
    .dout(din_x_177)
);
//defparam c238 .SIM_EMULATE = SIM_EMULATE;

wire [4:0] scram_terms_177 = {
    scram_state[3],
    scram_state[22],
    scram_state[41],
    scram_state[2],
    scram_state[21]
};

wire dout_w_177_i;
alt_e2550_xor6t0_hn c239 (
    .din({din_x_177,scram_terms_177}),
    .dout(dout_w_177_i)
);
//defparam c239 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_177 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_177 <= dout_w_177_i;
end

assign dout_tem[119] = dout_w_177;
assign scram_state[49] = dout_w_177;

//////////////////////////////////////////////////
//  dout[120]  next_state[50] has 11 terms
//////////////////////////////////////////////////

wire [5:0] din_terms_178 = {
    din[120],
    din[62],
    din[4],
    din[81],
    din[42],
    din[3]
};

wire din_x_178;
alt_e2550_xor6t1_hn c240 (
    .clk(clk),
    .din(din_terms_178),
    .dout(din_x_178)
);
//defparam c240 .SIM_EMULATE = SIM_EMULATE;

wire [4:0] scram_terms_178 = {
    scram_state[4],
    scram_state[23],
    scram_state[42],
    scram_state[3],
    scram_state[22]
};

wire dout_w_178_i;
alt_e2550_xor6t0_hn c241 (
    .din({din_x_178,scram_terms_178}),
    .dout(dout_w_178_i)
);
//defparam c241 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_178 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_178 <= dout_w_178_i;
end

assign dout_tem[120] = dout_w_178;
assign scram_state[50] = dout_w_178;

//////////////////////////////////////////////////
//  dout[121]  next_state[51] has 11 terms
//////////////////////////////////////////////////

wire [5:0] din_terms_179 = {
    din[121],
    din[63],
    din[5],
    din[82],
    din[43],
    din[4]
};

wire din_x_179;
alt_e2550_xor6t1_hn c242 (
    .clk(clk),
    .din(din_terms_179),
    .dout(din_x_179)
);
//defparam c242 .SIM_EMULATE = SIM_EMULATE;

wire [4:0] scram_terms_179 = {
    scram_state[5],
    scram_state[24],
    scram_state[43],
    scram_state[4],
    scram_state[23]
};

wire dout_w_179_i;
alt_e2550_xor6t0_hn c243 (
    .din({din_x_179,scram_terms_179}),
    .dout(dout_w_179_i)
);
//defparam c243 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_179 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_179 <= dout_w_179_i;
end

assign dout_tem[121] = dout_w_179;
assign scram_state[51] = dout_w_179;

//////////////////////////////////////////////////
//  dout[122]  next_state[52] has 11 terms
//////////////////////////////////////////////////

wire [5:0] din_terms_180 = {
    din[122],
    din[64],
    din[6],
    din[83],
    din[44],
    din[5]
};

wire din_x_180;
alt_e2550_xor6t1_hn c244 (
    .clk(clk),
    .din(din_terms_180),
    .dout(din_x_180)
);
//defparam c244 .SIM_EMULATE = SIM_EMULATE;

wire [4:0] scram_terms_180 = {
    scram_state[6],
    scram_state[25],
    scram_state[44],
    scram_state[5],
    scram_state[24]
};

wire dout_w_180_i;
alt_e2550_xor6t0_hn c245 (
    .din({din_x_180,scram_terms_180}),
    .dout(dout_w_180_i)
);
//defparam c245 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_180 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_180 <= dout_w_180_i;
end

assign dout_tem[122] = dout_w_180;
assign scram_state[52] = dout_w_180;

//////////////////////////////////////////////////
//  dout[123]  next_state[53] has 11 terms
//////////////////////////////////////////////////

wire [5:0] din_terms_181 = {
    din[123],
    din[65],
    din[7],
    din[84],
    din[45],
    din[6]
};

wire din_x_181;
alt_e2550_xor6t1_hn c246 (
    .clk(clk),
    .din(din_terms_181),
    .dout(din_x_181)
);
//defparam c246 .SIM_EMULATE = SIM_EMULATE;

wire [4:0] scram_terms_181 = {
    scram_state[7],
    scram_state[26],
    scram_state[45],
    scram_state[6],
    scram_state[25]
};

wire dout_w_181_i;
alt_e2550_xor6t0_hn c247 (
    .din({din_x_181,scram_terms_181}),
    .dout(dout_w_181_i)
);
//defparam c247 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_181 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_181 <= dout_w_181_i;
end

assign dout_tem[123] = dout_w_181;
assign scram_state[53] = dout_w_181;

//////////////////////////////////////////////////
//  dout[124]  next_state[54] has 11 terms
//////////////////////////////////////////////////

wire [5:0] din_terms_182 = {
    din[124],
    din[66],
    din[8],
    din[85],
    din[46],
    din[7]
};

wire din_x_182;
alt_e2550_xor6t1_hn c248 (
    .clk(clk),
    .din(din_terms_182),
    .dout(din_x_182)
);
//defparam c248 .SIM_EMULATE = SIM_EMULATE;

wire [4:0] scram_terms_182 = {
    scram_state[8],
    scram_state[27],
    scram_state[46],
    scram_state[7],
    scram_state[26]
};

wire dout_w_182_i;
alt_e2550_xor6t0_hn c249 (
    .din({din_x_182,scram_terms_182}),
    .dout(dout_w_182_i)
);
//defparam c249 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_182 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_182 <= dout_w_182_i;
end

assign dout_tem[124] = dout_w_182;
assign scram_state[54] = dout_w_182;

//////////////////////////////////////////////////
//  dout[125]  next_state[55] has 11 terms
//////////////////////////////////////////////////

wire [5:0] din_terms_183 = {
    din[125],
    din[67],
    din[9],
    din[86],
    din[47],
    din[8]
};

wire din_x_183;
alt_e2550_xor6t1_hn c250 (
    .clk(clk),
    .din(din_terms_183),
    .dout(din_x_183)
);
//defparam c250 .SIM_EMULATE = SIM_EMULATE;

wire [4:0] scram_terms_183 = {
    scram_state[9],
    scram_state[28],
    scram_state[47],
    scram_state[8],
    scram_state[27]
};

wire dout_w_183_i;
alt_e2550_xor6t0_hn c251 (
    .din({din_x_183,scram_terms_183}),
    .dout(dout_w_183_i)
);
//defparam c251 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_183 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_183 <= dout_w_183_i;
end

assign dout_tem[125] = dout_w_183;
assign scram_state[55] = dout_w_183;

//////////////////////////////////////////////////
//  dout[126]  next_state[56] has 11 terms
//////////////////////////////////////////////////

wire [5:0] din_terms_184 = {
    din[126],
    din[68],
    din[10],
    din[87],
    din[48],
    din[9]
};

wire din_x_184;
alt_e2550_xor6t1_hn c252 (
    .clk(clk),
    .din(din_terms_184),
    .dout(din_x_184)
);
//defparam c252 .SIM_EMULATE = SIM_EMULATE;

wire [4:0] scram_terms_184 = {
    scram_state[10],
    scram_state[29],
    scram_state[48],
    scram_state[9],
    scram_state[28]
};

wire dout_w_184_i;
alt_e2550_xor6t0_hn c253 (
    .din({din_x_184,scram_terms_184}),
    .dout(dout_w_184_i)
);
//defparam c253 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_184 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_184 <= dout_w_184_i;
end

assign dout_tem[126] = dout_w_184;
assign scram_state[56] = dout_w_184;

//////////////////////////////////////////////////
//  dout[127]  next_state[57] has 11 terms
//////////////////////////////////////////////////

wire [5:0] din_terms_185 = {
    din[127],
    din[69],
    din[11],
    din[88],
    din[49],
    din[10]
};

wire din_x_185;
alt_e2550_xor6t1_hn c254 (
    .clk(clk),
    .din(din_terms_185),
    .dout(din_x_185)
);
//defparam c254 .SIM_EMULATE = SIM_EMULATE;

wire [4:0] scram_terms_185 = {
    scram_state[11],
    scram_state[30],
    scram_state[49],
    scram_state[10],
    scram_state[29]
};

wire dout_w_185_i;
alt_e2550_xor6t0_hn c255 (
    .din({din_x_185,scram_terms_185}),
    .dout(dout_w_185_i)
);
//defparam c255 .SIM_EMULATE = SIM_EMULATE;

reg dout_w_185 = 1'b0;
always @(posedge clk) begin
    if (din_valid_r1) dout_w_185 <= dout_w_185_i;
end

assign dout_tem[127] = dout_w_185;
assign scram_state[57] = dout_w_185;

reg [127:0] din_r1;
reg [127:0] din_r2;
always @(posedge clk) begin
   din_r1 <= din;
   din_r2 <= din_r1;
end

assign dout = disable_signal ? din_r2 : dout_tem;
assign dout_valid = din_valid_r2;

endmodule

